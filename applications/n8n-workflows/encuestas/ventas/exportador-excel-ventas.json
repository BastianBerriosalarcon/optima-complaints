{
  "name": "Sales Survey - Excel Exporter",
  "description": "Genera y permite descargar reportes Excel de encuestas de ventas para jefe de ventas por concesionario/sucursal.",
  "tags": ["sales", "survey", "excel", "export", "ventas", "report"],
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/sales-survey/excel-export",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-excel-export-sales",
      "name": "Webhook Excel Export Ventas",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "jsCode": "// Validar parámetros de exportación de VENTAS\nconst exportRequest = $input.first().json;\n\n// Campos requeridos para exportación\nconst requiredFields = ['concesionario_id', 'jefe_ventas_id'];\nfor (const field of requiredFields) {\n  if (!exportRequest[field]) {\n    throw new Error(`Campo requerido faltante para exportación VENTAS: ${field}`);\n  }\n}\n\n// Validar fechas si se proporcionan\nlet fechaInicio = null;\nlet fechaFin = null;\n\nif (exportRequest.fecha_inicio) {\n  fechaInicio = new Date(exportRequest.fecha_inicio);\n  if (isNaN(fechaInicio.getTime())) {\n    throw new Error('fecha_inicio debe ser una fecha válida');\n  }\n}\n\nif (exportRequest.fecha_fin) {\n  fechaFin = new Date(exportRequest.fecha_fin);\n  if (isNaN(fechaFin.getTime())) {\n    throw new Error('fecha_fin debe ser una fecha válida');\n  }\n}\n\n// Si no se especifican fechas, usar últimos 30 días\nif (!fechaInicio && !fechaFin) {\n  fechaFin = new Date();\n  fechaInicio = new Date();\n  fechaInicio.setDate(fechaInicio.getDate() - 30);\n}\n\n// Preparar parámetros de consulta\nconst queryParams = {\n  concesionario_id: exportRequest.concesionario_id,\n  sucursal_id: exportRequest.sucursal_id || null,\n  fecha_inicio: fechaInicio.toISOString().split('T')[0],\n  fecha_fin: fechaFin.toISOString().split('T')[0],\n  jefe_ventas_id: exportRequest.jefe_ventas_id,\n  export_type: 'VENTAS',\n  request_timestamp: new Date().toISOString()\n};\n\nconsole.log('Parámetros de exportación VENTAS validados:', {\n  concesionario: queryParams.concesionario_id,\n  sucursal: queryParams.sucursal_id,\n  fechaInicio: queryParams.fecha_inicio,\n  fechaFin: queryParams.fecha_fin,\n  jefeVentas: queryParams.jefe_ventas_id\n});\n\nreturn [{ json: queryParams }];"
      },
      "id": "validate-export-params-sales",
      "name": "Validar Parámetros Export Ventas",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT ss.id, ss.fecha_creacion, ss.cliente_nombre, ss.cliente_rut, ss.cliente_telefono, ss.asesor_ventas_id, ss.vehiculo_modelo, ss.fecha_venta, ss.recomendacion, ss.atencion_asesor, ss.proceso_entrega, ss.satisfaccion_general, ss.average_score, ss.comentario, ss.origen, s.nombre as sucursal_nombre, u.nombre_completo as asesor_nombre FROM sales_surveys ss LEFT JOIN sucursales s ON ss.sucursal_id = s.id LEFT JOIN usuarios u ON ss.asesor_ventas_id = u.id WHERE ss.concesionario_id = $1 AND ($2::uuid IS NULL OR ss.sucursal_id = $2) AND ss.fecha_creacion BETWEEN $3 AND $4 AND ss.survey_type = 'VENTAS' ORDER BY ss.fecha_creacion DESC",
        "additionalFields": {
          "queryParameters": "={{ [$json.concesionario_id, $json.sucursal_id, $json.fecha_inicio, $json.fecha_fin] }}"
        }
      },
      "id": "query-sales-surveys",
      "name": "Consultar Encuestas Ventas",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [600, 300]
    },
    {
      "parameters": {
        "jsCode": "// Procesar datos para Excel específico de VENTAS\nconst salesSurveys = $input.first().json;\nconst exportParams = $('Validar Parámetros Export Ventas').first().json;\n\nif (!salesSurveys || salesSurveys.length === 0) {\n  throw new Error('No se encontraron encuestas de VENTAS para el período seleccionado');\n}\n\n// Preparar datos para Excel con columnas específicas de VENTAS\nconst excelData = salesSurveys.map((survey, index) => {\n  return {\n    'ID': survey.id,\n    'Fecha Encuesta': new Date(survey.fecha_creacion).toLocaleDateString('es-CL'),\n    'Cliente': survey.cliente_nombre,\n    'RUT': survey.cliente_rut || 'N/A',\n    'Teléfono': survey.cliente_telefono,\n    'Asesor de Ventas': survey.asesor_nombre || `ID: ${survey.asesor_ventas_id}`,\n    'Sucursal': survey.sucursal_nombre || 'N/A',\n    'Vehículo Vendido': survey.vehiculo_modelo,\n    'Fecha Venta': new Date(survey.fecha_venta).toLocaleDateString('es-CL'),\n    'Recomendación (1-10)': survey.recomendacion,\n    'Atención Asesor (1-10)': survey.atencion_asesor,\n    'Proceso Entrega (1-10)': survey.proceso_entrega,\n    'Satisfacción General (1-10)': survey.satisfaccion_general,\n    'Promedio': survey.average_score,\n    'Comentarios': survey.comentario || 'Sin comentarios',\n    'Origen': survey.origen,\n    'Estado': survey.average_score >= 9 ? 'Excelente' : \n             survey.average_score >= 7 ? 'Bueno' : \n             survey.average_score >= 5 ? 'Regular' : 'Bajo'\n  };\n});\n\n// Calcular estadísticas resumen específicas de VENTAS\nconst stats = {\n  total_encuestas: salesSurveys.length,\n  promedio_general: (salesSurveys.reduce((sum, s) => sum + s.average_score, 0) / salesSurveys.length).toFixed(2),\n  promedio_recomendacion: (salesSurveys.reduce((sum, s) => sum + s.recomendacion, 0) / salesSurveys.length).toFixed(2),\n  promedio_atencion_asesor: (salesSurveys.reduce((sum, s) => sum + s.atencion_asesor, 0) / salesSurveys.length).toFixed(2),\n  promedio_proceso_entrega: (salesSurveys.reduce((sum, s) => sum + s.proceso_entrega, 0) / salesSurveys.length).toFixed(2),\n  promedio_satisfaccion_general: (salesSurveys.reduce((sum, s) => sum + s.satisfaccion_general, 0) / salesSurveys.length).toFixed(2),\n  encuestas_excelentes: salesSurveys.filter(s => s.average_score >= 9).length,\n  encuestas_buenas: salesSurveys.filter(s => s.average_score >= 7 && s.average_score < 9).length,\n  encuestas_regulares: salesSurveys.filter(s => s.average_score >= 5 && s.average_score < 7).length,\n  encuestas_bajas: salesSurveys.filter(s => s.average_score < 5).length,\n  por_origen: {\n    qr: salesSurveys.filter(s => s.origen === 'QR_VENTAS').length,\n    whatsapp: salesSurveys.filter(s => s.origen === 'WHATSAPP_VENTAS').length,\n    llamada: salesSurveys.filter(s => s.origen === 'LLAMADA_VENTAS').length\n  }\n};\n\n// Generar nombre de archivo específico para VENTAS\nconst fileName = `Encuestas_Ventas_${exportParams.concesionario_id.substring(0, 8)}_${exportParams.fecha_inicio}_${exportParams.fecha_fin}.xlsx`;\n\nconst result = {\n  excel_data: excelData,\n  statistics: stats,\n  export_info: {\n    type: 'VENTAS',\n    department: 'VENTAS',\n    concesionario_id: exportParams.concesionario_id,\n    sucursal_id: exportParams.sucursal_id,\n    fecha_inicio: exportParams.fecha_inicio,\n    fecha_fin: exportParams.fecha_fin,\n    jefe_ventas_id: exportParams.jefe_ventas_id,\n    generated_at: new Date().toISOString(),\n    file_name: fileName,\n    total_records: excelData.length\n  }\n};\n\nconsole.log('Datos Excel VENTAS preparados:', {\n  tipo: 'VENTAS',\n  totalEncuestas: result.statistics.total_encuestas,\n  promedioGeneral: result.statistics.promedio_general,\n  fileName: result.export_info.file_name\n});\n\nreturn [{ json: result }];"
      },
      "id": "process-sales-excel-data",
      "name": "Procesar Datos Excel Ventas",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 300]
    },
    {
      "parameters": {
        "operation": "fromArray",
        "options": {
          "sheetName": "Encuestas Ventas"
        },
        "binaryPropertyName": "sales_excel_file"
      },
      "id": "generate-sales-excel",
      "name": "Generar Excel Ventas",
      "type": "n8n-nodes-base.microsoftExcel",
      "typeVersion": 2,
      "position": [1000, 300],
      "executeOnce": false
    },
    {
      "parameters": {
        "respondWith": "binary",
        "binaryPropertyName": "sales_excel_file",
        "options": {
          "responseHeaders": {
            "Content-Disposition": "=attachment; filename=\"{{ $('Procesar Datos Excel Ventas').first().json.export_info.file_name }}\"",
            "Content-Type": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
          }
        }
      },
      "id": "download-sales-excel",
      "name": "Descargar Excel Ventas",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1200, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"error\",\n  \"message\": \"Error al generar reporte Excel de VENTAS.\",\n  \"export_type\": \"VENTAS\",\n  \"error_details\": \"{{ $json.error?.message || 'Error desconocido' }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "error-response-sales-excel",
      "name": "Respuesta Error Excel Ventas",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [800, 480]
    }
  ],
  "connections": {
    "Webhook Excel Export Ventas": {
      "main": [
        [
          {
            "node": "Validar Parámetros Export Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar Parámetros Export Ventas": {
      "main": [
        [
          {
            "node": "Consultar Encuestas Ventas",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respuesta Error Excel Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consultar Encuestas Ventas": {
      "main": [
        [
          {
            "node": "Procesar Datos Excel Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesar Datos Excel Ventas": {
      "main": [
        [
          {
            "node": "Generar Excel Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generar Excel Ventas": {
      "main": [
        [
          {
            "node": "Descargar Excel Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  }
}