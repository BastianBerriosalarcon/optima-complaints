{
  "name": "Survey - Low Score Notifier",
  "description": "Workflow enfocado en enviar notificaciones cuando una encuesta tiene calificación baja (1-8) y crear un caso para seguimiento.",
  "tags": ["survey", "notification", "low-score", "email", "srp", "case-management"],
  "nodes": [
    {
      "parameters": {
        "workflowId": "{{ $json.workflowId }}"
      },
      "id": "workflow-trigger",
      "name": "Trigger del Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "functionCode": "// Función enfocada en validar datos de notificación de baja calificación\n// Principio SRP: Una sola responsabilidad - validar entrada de notificación\n\nconst notificationData = $input.first().json;\n\n// Validaciones críticas siguiendo patrón de otros workflows\nconst requiredFields = ['survey_id', 'concesionario_id', 'cliente_info', 'scores'];\nfor (const field of requiredFields) {\n  if (!notificationData[field]) {\n    throw new Error(`Campo requerido faltante para notificación: ${field}`);\n  }\n}\n\n// Validar que realmente es una calificación baja\nconst averageScore = notificationData.scores.promedio;\nif (averageScore > 8) {\n  throw new Error(`Calificación ${averageScore} no requiere notificación (solo calificaciones 1-8)`);\n}\n\n// Validar UUID de concesionario\nconst uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\nif (!uuidRegex.test(notificationData.concesionario_id)) {\n  throw new Error('concesionario_id debe ser un UUID válido');\n}\n\n// Normalizar datos de notificación\nconst validatedNotification = {\n  survey_id: notificationData.survey_id,\n  concesionario_id: notificationData.concesionario_id,\n  sucursal_id: notificationData.sucursal_id || null,\n  \n  // Información del cliente\n  cliente: {\n    nombre: notificationData.cliente_info.nombre || 'Cliente',\n    telefono: notificationData.cliente_info.telefono || '',\n    rut: notificationData.cliente_info.rut || null\n  },\n  \n  // Calificaciones detalladas\n  calificaciones: {\n    recomendacion: notificationData.scores.recomendacion,\n    satisfaccion: notificationData.scores.satisfaccion,\n    lavado: notificationData.scores.lavado,\n    asesor: notificationData.scores.asesor,\n    promedio: notificationData.scores.promedio\n  },\n  \n  // Contexto de la encuesta\n  contexto: {\n    origen: notificationData.survey_context?.origen || 'unknown',\n    comentario: notificationData.survey_context?.comentario || null,\n    fecha_respuesta: notificationData.survey_context?.fecha_respuesta || new Date().toISOString()\n  },\n  \n  // Notificación\n  notification: {\n    urgency: notificationData.scores.promedio <= 5 ? 'alta' : 'media'\n  }\n};\n\nreturn [{ json: validatedNotification }];"