{
  "name": "Lead Processing Template - Base",
  "description": "Template base para workflows de procesamiento de leads. Principio DRY y configurabilidad.",
  "version": "1.0.0", 
  "category": "template",
  "tags": ["template", "lead", "base", "reusable"],
  "metadata": {
    "lastUpdated": "2025-08-09T00:00:00Z",
    "apiVersion": "n8n/1.0",
    "author": "OptimaCX Team",
    "templateType": "lead-base",
    "support": {
      "email": "support@optimacx.com",
      "docs": "https://docs.optimacx.com/workflows/templates"
    },
    "configurable": {
      "leadSource": {
        "type": "enum",
        "values": ["whatsapp", "web", "email", "phone"],
        "description": "Origen del lead"
      },
      "processingMode": {
        "type": "enum",
        "values": ["immediate", "batch", "scheduled"],
        "description": "Modo de procesamiento"
      },
      "aiAnalysis": {
        "type": "boolean", 
        "description": "Activar análisis IA"
      }
    },
    "expectedInput": {
      "tenant_id": "string",
      "lead_source": "string",
      "contact_data": "object",
      "message_content": "string"
    },
    "expectedOutput": {
      "status": "string",
      "lead_id": "string",
      "ai_score": "number",
      "assigned_advisor": "string"
    }
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/lead/template",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-lead-input",
      "name": "Lead Input Webhook",
      "type": "n8n-nodes-base.webhook", 
      "typeVersion": 2.1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "jsCode": "// Configuración base para procesamiento de leads\nconst input = $input.first().json;\nconst config = {\n  leadSource: input.lead_source || 'web',\n  tenantId: input.tenant_id,\n  processingMode: input.processing_mode || 'immediate',\n  aiAnalysis: input.ai_analysis !== false,\n  timestamp: new Date().toISOString(),\n  leadId: `lead_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n};\n\n// Validaciones\nif (!config.tenantId) {\n  throw new Error('MISSING_TENANT_ID: tenant_id es requerido');\n}\n\nif (!input.contact_data || !input.contact_data.phone) {\n  throw new Error('MISSING_CONTACT_DATA: contact_data.phone es requerido');\n}\n\n// Configurar pipeline según origen\nconst pipelines = {\n  whatsapp: {\n    validator: 'validador-mensajes-whatsapp',\n    processor: 'procesador-whatsapp-leads',\n    analyzer: 'analisis-ia-leads'\n  },\n  web: {\n    validator: 'filtro-leads-existentes', \n    processor: 'procesador-excel-leads',\n    analyzer: 'puntuacion-ia-leads'\n  },\n  email: {\n    validator: 'filtro-leads-existentes',\n    processor: 'manejador-respuestas-prospeccion',\n    analyzer: 'analisis-ia-leads'\n  }\n};\n\nreturn [{\n  json: {\n    ...input,\n    config,\n    pipeline: pipelines[config.leadSource] || pipelines.web\n  }\n}];"
      },
      "id": "configure-lead-pipeline",
      "name": "Configure Lead Pipeline",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [400, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.config.aiAnalysis }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "check-ai-analysis",
      "name": "Check AI Analysis",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [600, 300]
    },
    {
      "parameters": {
        "operation": "create",
        "resource": "execution",
        "workflowId": "={{ $json.pipeline.analyzer }}",
        "data": "={{ JSON.stringify($json) }}"
      },
      "id": "trigger-ai-analysis",
      "name": "Trigger AI Analysis",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 2.1,
      "position": [600, 200]
    },
    {
      "parameters": {
        "operation": "create", 
        "resource": "execution",
        "workflowId": "asignacion-asesores",
        "data": "={{ JSON.stringify($json) }}"
      },
      "id": "trigger-advisor-assignment",
      "name": "Trigger Advisor Assignment",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 2.1,
      "position": [800, 300]
    }
  ],
  "connections": {
    "Lead Input Webhook": {
      "main": [
        [
          {
            "node": "Configure Lead Pipeline",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure Lead Pipeline": {
      "main": [
        [
          {
            "node": "Check AI Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check AI Analysis": {
      "main": [
        [
          {
            "node": "Trigger AI Analysis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Trigger Advisor Assignment",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "Trigger AI Analysis": {
      "main": [
        [
          {
            "node": "Trigger Advisor Assignment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
