{
  "name": "Plantilla - Onboarding Automatizado de Tenant",
  "description": "Workflow template que automatiza la creación y configuración completa de un nuevo concesionario en Óptima-CX. Incluye creación de BD, configuración multitenant, secrets, workflows y validación.",
  "tags": [
    "template",
    "onboarding",
    "multitenant", 
    "automation",
    "critical"
  ],
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/webhook/new-tenant-onboarding",
        "options": {
          "responseData": "firstEntryJson"
        }
      },
      "id": "webhook-onboarding-trigger",
      "name": "Webhook Nuevo Tenant",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [250, 300]
    },
    {
      "parameters": {
      },
      "id": "validate-tenant-data",
      "name": "Validar Datos Tenant",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [470, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Crear registro del concesionario\nINSERT INTO concesionarios (\n  id,\n  nombre,\n  email_contacto,\n  telefono_principal,\n  whatsapp_phone_number_id,\n  configuracion_ai,\n  configuracion_horarios,\n  configuracion_smtp,\n  api_key,\n  webhook_token,\n  chatwoot_subdomain,\n  activo,\n  fecha_creacion\n) VALUES (\n  $1,\n  $2,\n  $3,\n  $4,\n  $5,\n  $6::jsonb,\n  $7::jsonb,\n  $8::jsonb,\n  $9,\n  $10,\n  $11,\n  true,\n  CURRENT_TIMESTAMP\n) RETURNING *;",
        "additionalFields": {
          "queryParameters": "=[\n  $json.tenant_id,\n  $json.tenant_name,\n  $json.tenant_email,\n  $json.whatsapp_phone_number,\n  $json.whatsapp_config.phone_number_id,\n  JSON.stringify($json.ai_config),\n  JSON.stringify($json.business_hours),\n  JSON.stringify($json.email_config),\n  $json.platform_config.api_key,\n  $json.platform_config.webhook_token,\n  $json.platform_config.chatwoot_subdomain,\n]"
        }
      },
      "id": "create-tenant-db",
      "name": "Crear Tenant en BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [690, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Crear usuarios por defecto para el tenant\nINSERT INTO usuarios (\n  concesionario_id,\n  email,\n  nombre,\n  rol,\n  activo,\n  fecha_creacion\n) VALUES \n-- Super admin del tenant\n($1, $2, 'Administrador Principal', 'super_usuario', true, CURRENT_TIMESTAMP),\n-- Roles básicos de ejemplo\n($1, $3, 'Jefe de Ventas', 'jefe_ventas', true, CURRENT_TIMESTAMP),\n($1, $4, 'Jefe de Servicio', 'jefe_servicio', true, CURRENT_TIMESTAMP),\n($1, $5, 'Contact Center', 'contact_center', true, CURRENT_TIMESTAMP)\nRETURNING *;",
        "additionalFields": {
          "queryParameters": "=[\n  $json.tenant_id,\n  $json.admin_email,\n  `ventas@${$json.tenant_slug}.com`,\n  `servicio@${$json.tenant_slug}.com`,\n  `contactcenter@${$json.tenant_slug}.com`\n]"
        }
      },
      "id": "create-default-users",
      "name": "Crear Usuarios por Defecto",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [910, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Crear sucursal principal por defecto\nINSERT INTO sucursales (\n  concesionario_id,\n  nombre,\n  direccion,\n  telefono,\n  email,\n  es_principal,\n  activa,\n  fecha_creacion\n) VALUES (\n  $1,\n  $2,\n  'Dirección por definir',\n  $3,\n  $4,\n  true,\n  true,\n  CURRENT_TIMESTAMP\n) RETURNING *;",
        "additionalFields": {
          "queryParameters": "=[\n  $json.tenant_id,\n  `${$json.tenant_name} - Sucursal Principal`,\n  $json.whatsapp_phone_number,\n  $json.tenant_email\n]"
        }
      },
      "id": "create-default-branch",
      "name": "Crear Sucursal Principal",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [1130, 300]
    },
    {
      "parameters": {
      },
      "id": "prepare-workflow-config",
      "name": "Preparar Config Workflows",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1350, 300]
    },
    {
      "parameters": {
        "jsCode": "
      },
      "id": "prepare-rag-tables",
      "name": "Preparar Tablas RAG",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1570, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "={{ $json.rag_table_sql }}"
      },
      "id": "execute-rag-setup",
      "name": "Ejecutar Setup RAG",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [1790, 300]
    },
    {
      "parameters": {
      },
      "id": "validate-onboarding",
      "name": "Validar Onboarding",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2010, 300]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "requestMethod": "POST",
        "url": "={{ $json.email_config.smtp_host }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={\n  \"to\": \"{{ $json.admin_email }}\",\n  \"subject\": \"🎉 Onboarding Completado - {{ $json.tenant_name }}\",\n  \"html\": `\n    <h2>¡Bienvenido a Óptima-CX!</h2>\n    <p>Su onboarding se ha completado exitosamente.</p>\n    \n    <h3>📊 Información del Tenant</h3>\n    <ul>\n      <li><strong>ID:</strong> {{ $json.tenant_id }}</li>\n      <li><strong>Nombre:</strong> {{ $json.tenant_name }}</li>\n      <li><strong>Estado:</strong> {{ $json.onboarding_status }}</li>\n    </ul>\n    \n    <h3>🔗 URLs de Acceso</h3>\n    <ul>\n      <li><a href=\"{{ $json.access_urls.dashboard }}\">Dashboard Principal</a></li>\n      <li><a href=\"{{ $json.access_urls.chatwoot }}\">Chatwoot (Conversaciones)</a></li>\n    </ul>\n    \n    <h3>🔑 Credenciales</h3>\n    <ul>\n      <li><strong>API Key:</strong> {{ $json.credentials.api_key }}</li>\n      <li><strong>Webhook Token:</strong> {{ $json.credentials.webhook_token }}</li>\n    </ul>\n    \n    <h3>📋 Próximos Pasos</h3>\n    <ol>\n      {{ $json.next_steps.map(step => `<li>${step}</li>`).join('') }}\n    </ol>\n    \n    <p>¡Gracias por elegir Óptima-CX!</p>\n  `\n}"
      },
      "id": "send-welcome-email",
      "name": "Enviar Email Bienvenida",
      "type": "n8n-nodes-base.httpRequestV3",
      "typeVersion": 4.2,
      "position": [2230, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Actualizar estado del tenant a 'active'\nUPDATE concesionarios \nSET \n  activo = true,\n  estado_onboarding = 'completed',\n  fecha_activacion = CURRENT_TIMESTAMP\nWHERE id = $1\nRETURNING *;",
        "additionalFields": {
          "queryParameters": "=[$json.tenant_id]"
        }
      },
      "id": "activate-tenant",
      "name": "Activar Tenant",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [2450, 300]
    },
    {
      "parameters": {
        "respondWithOptions": "responseData",
        "responseData": "={\n  \"success\": true,\n  \"message\": \"Onboarding completado exitosamente\",\n  \"tenant_id\": \"{{ $json.id }}\",\n  \"tenant_name\": \"{{ $json.nombre }}\",\n  \"status\": \"{{ $json.estado_onboarding }}\",\n  \"activated_at\": \"{{ $json.fecha_activacion }}\",\n  \"next_steps\": [\n    \"Configurar WhatsApp Business\",\n    \"Cargar documentos RAG\",\n    \"Configurar usuarios\",\n    \"Realizar pruebas\"\n  ]\n}"
      },
      "id": "respond-success",
      "name": "Respuesta Final",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2,
      "position": [2670, 300]
    }
  ],
  "connections": {
    "Webhook Nuevo Tenant": {
      "main": [[{"node": "Validar Datos Tenant", "type": "main", "index": 0}]]
    },
    "Validar Datos Tenant": {
      "main": [[{"node": "Crear Tenant en BD", "type": "main", "index": 0}]]
    },
    "Crear Tenant en BD": {
      "main": [[{"node": "Crear Usuarios por Defecto", "type": "main", "index": 0}]]
    },
    "Crear Usuarios por Defecto": {
      "main": [[{"node": "Crear Sucursal Principal", "type": "main", "index": 0}]]
    },
    "Crear Sucursal Principal": {
      "main": [[{"node": "Preparar Config Workflows", "type": "main", "index": 0}]]
    },
    "Preparar Config Workflows": {
      "main": [[{"node": "Preparar Tablas RAG", "type": "main", "index": 0}]]
    },
    "Preparar Tablas RAG": {
      "main": [[{"node": "Ejecutar Setup RAG", "type": "main", "index": 0}]]
    },
    "Ejecutar Setup RAG": {
      "main": [[{"node": "Validar Onboarding", "type": "main", "index": 0}]]
    },
    "Validar Onboarding": {
      "main": [[{"node": "Enviar Email Bienvenida", "type": "main", "index": 0}]]
    },
    "Enviar Email Bienvenida": {
      "main": [[{"node": "Activar Tenant", "type": "main", "index": 0}]]
    },
    "Activar Tenant": {
      "main": [[{"node": "Respuesta Final", "type": "main", "index": 0}]]
    }
  },
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "manejador-errores"
  },
  "staticData": {},
  "variables": {
    "ONBOARDING_VERSION": "1.0.0",
    "DEFAULT_TIMEZONE": "America/Santiago",
    "RAG_EMBEDDING_MODEL": "gemini-embedding-001",
    "AI_DEFAULT_MODEL": "gemini-2.5-pro"
  }
}