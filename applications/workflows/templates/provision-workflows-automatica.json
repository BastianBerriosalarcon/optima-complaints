{
  "name": "Provisión Automática de Workflows por Tenant",
  "description": "Workflow maestro que automatiza la creación y configuración de todos los workflows necesarios para un nuevo concesionario, incluyendo personalización de variables, credenciales y configuración RAG.",
  "tags": [
    "provision",
    "automation", 
    "multitenant",
    "workflows",
    "critico"
  ],
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/webhook/provision-tenant-workflows",
        "options": {
          "responseData": "firstEntryJson"
        }
      },
      "id": "webhook-provision-trigger",
      "name": "Webhook Provisión Workflows",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
      },
      "id": "validate-provision-config",
      "name": "Validar Configuración",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [470, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Verificar que el tenant existe y está activo\nSELECT \n  id,\n  nombre,\n  activo,\n  configuracion_ai,\n  fecha_creacion\nFROM concesionarios \nWHERE id = $1 AND activo = true\nLIMIT 1;",
        "additionalFields": {
          "queryParameters": "=[$json.tenant_id]"
        }
      },
      "id": "verify-tenant-exists",
      "name": "Verificar Tenant Existe",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [690, 300]
    },
    {
      "parameters": {
      },
      "id": "prepare-workflow-configs",
      "name": "Preparar Configs Workflows",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [910, 300]
    },
    {
      "parameters": {
      },
      "id": "create-provision-items",
      "name": "Crear Items Provisión",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1130, 300]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "requestMethod": "POST",
        "url": "={{ $vars.N8N_API_BASE }}/workflows",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ process.env.N8N_API_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={\n  \"name\": \"{{ $json.tenant_id }}_{{ $json.workflow_name }}\",\n  \"nodes\": {{ JSON.stringify($json.workflow_template_nodes) }},\n  \"connections\": {{ JSON.stringify($json.workflow_template_connections) }},\n  \"settings\": {\n    \"saveExecutionProgress\": true,\n    \"saveManualExecutions\": true,\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"errorWorkflow\": \"{{ $json.tenant_id }}_manejador-errores\"\n  },\n  \"staticData\": {},\n  \"variables\": {{ JSON.stringify($json.workflow_variables) }},\n  \"tags\": [\n    \"{{ $json.tenant_id }}\",\n    \"{{ $json.tenant_name }}\",\n    \"auto-provisioned\",\n    \"{{ $json.workflow_name }}\"\n  ],\n  \"active\": false\n}",
        "options": {
          "timeout": 30000,
          "retry": {
            "enabled": true,
            "maxRetries": 3
          }
        }
      },
      "id": "create-workflow-via-api",
      "name": "Crear Workflow via API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1350, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Registrar workflow provisionado en tabla de auditoría\nINSERT INTO workflows_provisionados (\n  tenant_id,\n  tenant_name,\n  workflow_name,\n  workflow_id,\n  n8n_workflow_id,\n  provision_id,\n  configuracion,\n  estado,\n  created_at\n) VALUES (\n  $1,\n  $2,\n  $3,\n  $4,\n  $5,\n  $6,\n  $7::jsonb,\n  'created',\n  CURRENT_TIMESTAMP\n) \nON CONFLICT (tenant_id, workflow_name) DO UPDATE SET\n  n8n_workflow_id = EXCLUDED.n8n_workflow_id,\n  configuracion = EXCLUDED.configuracion,\n  estado = 'updated',\n  updated_at = CURRENT_TIMESTAMP\nRETURNING *;",
        "additionalFields": {
          "queryParameters": "=[\n  $json.tenant_id,\n  $json.tenant_name,\n  $json.workflow_name,\n  `${$json.tenant_id}_${$json.workflow_name}`,\n  $('Crear Workflow via API').first().json.id,\n  $json.provision_id,\n  JSON.stringify({\n    workflow_variables: $json.workflow_variables,\n    specific_config: $json.specific_config,\n    provision_index: $json.provision_index\n  })\n]"
        }
      },
      "id": "register-provisioned-workflow",
      "name": "Registrar Workflow",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [1570, 300]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "requestMethod": "POST",
        "url": "={{ $vars.N8N_API_BASE }}/workflows/{{ $('Crear Workflow via API').first().json.id }}/activate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ process.env.N8N_API_KEY }}"
            }
          ]
        },
        "options": {
          "timeout": 15000
        }
      },
      "id": "activate-workflow",
      "name": "Activar Workflow",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1790, 300]
    },
    {
      "parameters": {
      },
      "id": "process-provision-result",
      "name": "Procesar Resultado",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2010, 300]
    },
    {
      "parameters": {
      },
      "id": "generate-provision-summary",
      "name": "Generar Resumen Final",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2230, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Actualizar estado de provisión del tenant\nUPDATE concesionarios \nSET \n  workflows_provisionados = true,\n  fecha_provision_workflows = CURRENT_TIMESTAMP,\n  configuracion_workflows = $2::jsonb,\n  estado_provision = $3\nWHERE id = $1\nRETURNING *;",
        "additionalFields": {
          "queryParameters": "=[\n  $json.tenant_id,\n  JSON.stringify({\n    provision_summary: $json.provision_stats,\n    provisioned_workflows: $json.provisioned_workflows,\n    provision_completed_at: $json.timing.provision_completed_at,\n    webhook_urls: $json.important_urls\n  }),\n  $json.provision_status\n]"
        }
      },
      "id": "update-tenant-provision-status",
      "name": "Actualizar Estado Tenant",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [2450, 300]
    },
    {
      "parameters": {
        "respondWithOptions": "responseData",
        "responseData": "={\n  \"success\": true,\n  \"message\": \"Provisión de workflows completada\",\n  \"tenant_id\": \"{{ $json.tenant_id }}\",\n  \"provision_status\": \"{{ $('Generar Resumen Final').first().json.provision_status }}\",\n  \"stats\": {{ JSON.stringify($('Generar Resumen Final').first().json.provision_stats) }},\n  \"provisioned_workflows\": {{ JSON.stringify($('Generar Resumen Final').first().json.provisioned_workflows) }},\n  \"important_urls\": {{ JSON.stringify($('Generar Resumen Final').first().json.important_urls) }},\n  \"next_steps\": [\n    \"Configurar WhatsApp Business webhooks\",\n    \"Cargar documentos RAG iniciales\", \n    \"Configurar usuarios y permisos\",\n    \"Realizar pruebas de integración\",\n    \"Activar workflows de producción\"\n  ]\n}"
      },
      "id": "respond-provision-complete",
      "name": "Respuesta Provisión",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2670, 300]
    }
  ],
  "connections": {
    "Webhook Provisión Workflows": {
      "main": [[{"node": "Validar Configuración", "type": "main", "index": 0}]]
    },
    "Validar Configuración": {
      "main": [[{"node": "Verificar Tenant Existe", "type": "main", "index": 0}]]
    },
    "Verificar Tenant Existe": {
      "main": [[{"node": "Preparar Configs Workflows", "type": "main", "index": 0}]]
    },
    "Preparar Configs Workflows": {
      "main": [[{"node": "Crear Items Provisión", "type": "main", "index": 0}]]
    },
    "Crear Items Provisión": {
      "main": [[{"node": "Crear Workflow via API", "type": "main", "index": 0}]]
    },
    "Crear Workflow via API": {
      "main": [[{"node": "Registrar Workflow", "type": "main", "index": 0}]]
    },
    "Registrar Workflow": {
      "main": [[{"node": "Activar Workflow", "type": "main", "index": 0}]]
    },
    "Activar Workflow": {
      "main": [[{"node": "Procesar Resultado", "type": "main", "index": 0}]]
    },
    "Procesar Resultado": {
      "main": [[{"node": "Generar Resumen Final", "type": "main", "index": 0}]]
    },
    "Generar Resumen Final": {
      "main": [[{"node": "Actualizar Estado Tenant", "type": "main", "index": 0}]]
    },
    "Actualizar Estado Tenant": {
      "main": [[{"node": "Respuesta Provisión", "type": "main", "index": 0}]]
    }
  },
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "manejador-errores"
  },
  "staticData": {},
  "variables": {
    "PROVISION_VERSION": "1.0.0",
    "N8N_API_BASE": "http://n8n-service:5678/api/v1",
    "WEBHOOK_BASE_URL": "https://n8n-optimacx.run.app/webhook",
    "DEFAULT_PROVISION_MODE": "complete",
    "MAX_CONCURRENT_PROVISIONS": 10
  }
}