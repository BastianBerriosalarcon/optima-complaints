{
  "name": "Enviador WhatsApp de Prospección",
  "description": "Envía mensajes masivos de WhatsApp para prospección de leads desde Excel",
  "tags": ["leads", "prospección", "whatsapp", "masivo", "srp"],
  "nodes": [
    {
      "parameters": {
        "workflowId": "enviador-whatsapp-prospeccion"
      },
      "id": "workflow-trigger",
      "name": "Trigger del Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 2.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Validar payload para envío masivo de WhatsApp\nconst inData = $input.first().json || {};\nconst required = ['unique_clients_to_contact', 'tenant_id'];\nconst missing = required.filter(field => !inData[field]);\nconst valid = missing.length === 0 && Array.isArray(inData.unique_clients_to_contact) && inData.unique_clients_to_contact.length > 0;\nreturn [{ json: { ...inData, valid, missing_fields: missing } }];"
      },
      "id": "validate-payload",
      "name": "Validar Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [400, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": { "caseSensitive": true, "typeValidation": "strict" },
          "conditions": [
            {
              "leftValue": "={{ $json.valid }}",
              "operator": { "type": "boolean", "operation": "isTrue" },
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-valid-payload",
      "name": "¿Payload Válido?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [600, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT concesionario_id, nombre, whatsapp_business_token, whatsapp_phone_id FROM concesionarios WHERE id = $1 AND whatsapp_business_token IS NOT NULL",
        "additionalFields": {
          "queryParameters": "={{ [$json.tenant_id] }}"
        }
      },
      "id": "get-whatsapp-config",
      "name": "Obtener Config WhatsApp",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [800, 300]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $input.all().length }}",
              "operation": "greaterThan",
              "value2": 0
            }
          ]
        }
      },
      "id": "has-whatsapp-config",
      "name": "¿Configuración Válida?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [1000, 300]
    },
    {
      "parameters": {
        "jsCode": "// Procesar y personalizar mensajes de prospección\ntry {\n  const clientData = $('Validar Payload').first().json;\n  const whatsappConfig = $input.first().json;\n  const clients = clientData.unique_clients_to_contact || [];\n  \n  const mensajeTemplate = `¡Hola {nombre}! 👋\n\nSoy del equipo de ${whatsappConfig.nombre}, especialistas en vehículos.\n\nVimos que podrías estar interesado en nuestros vehículos. ¿Te gustaría recibir información sobre nuestras mejores ofertas?\n\nResponde SÍ si te interesa o NO si prefieres que no te contactemos más.\n\n¡Esperamos poder ayudarte a encontrar tu vehículo ideal! 🚗✨`;\n  \n  const mensajes = [];\n  \n  for (let i = 0; i < clients.length; i++) {\n    const client = clients[i];\n    \n    if (!client.telefono || !client.nombre) {\n      continue;\n    }\n    \n    const nombreCliente = client.nombre || 'Estimado cliente';\n    const mensajePersonalizado = mensajeTemplate.replace('{nombre}', nombreCliente);\n    \n    mensajes.push({\n      cliente_nombre: nombreCliente,\n      cliente_telefono: client.telefono,\n      mensaje_personalizado: mensajePersonalizado,\n      concesionario_id: whatsappConfig.concesionario_id,\n      concesionario_nombre: whatsappConfig.nombre,\n      whatsapp_token: whatsappConfig.whatsapp_business_token,\n      whatsapp_phone_id: whatsappConfig.whatsapp_phone_id,\n      index: i,\n      total: clients.length,\n      delay_seconds: Math.floor(i / 5) * 12,\n      timestamp: new Date().toISOString()\n    });\n  }\n  \n  return mensajes.map(msg => ({ json: msg }));\n  \n} catch (error) {\n  return [{\n    json: {\n      status: 'error',\n      message: 'Error al procesar mensajes de prospección',\n      error: error.message,\n      timestamp: new Date().toISOString()\n    }\n  }];\n}"
      },
      "id": "process-messages",
      "name": "Procesar Mensajes",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1200, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.status }}",
              "operation": "notEqual",
              "value2": "error"
            }
          ]
        }
      },
      "id": "processing-success",
      "name": "¿Procesamiento Exitoso?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [1400, 300]
    },
    {
      "parameters": {
        "amount": "={{ $json.delay_seconds }}",
        "unit": "seconds"
      },
      "id": "wait-rate-limit",
      "name": "Esperar Rate Limit",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [1600, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v18.0/{{ $json.whatsapp_phone_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $json.whatsapp_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "={{ JSON.stringify({\n  messaging_product: 'whatsapp',\n  to: $json.cliente_telefono,\n  type: 'text',\n  text: {\n    body: $json.mensaje_personalizado\n  }\n}) }}",
        "options": {
          "timeout": 10000
        }
      },
      "id": "send-whatsapp",
      "name": "Enviar WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1800, 300]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.status_code || $json.statusCode }}",
              "operation": "equal",
              "value2": 200
            }
          ]
        }
      },
      "id": "whatsapp-success",
      "name": "¿Envío Exitoso?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [2000, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO mensajes_whatsapp (cliente_telefono, cliente_nombre, mensaje, tipo, estado, concesionario_id, fecha_envio) VALUES ($1, $2, $3, $4, $5, $6, $7)",
        "additionalFields": {
          "queryParameters": "={{ [$json.cliente_telefono, $json.cliente_nombre, $json.mensaje_personalizado, 'prospección', 'enviado', $json.concesionario_id, $json.timestamp] }}"
        }
      },
      "id": "log-success",
      "name": "Registrar Envío Exitoso",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [2200, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO mensajes_whatsapp (cliente_telefono, cliente_nombre, mensaje, tipo, estado, concesionario_id, fecha_envio, error_detalle) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)",
        "additionalFields": {
          "queryParameters": "={{ [$json.cliente_telefono, $json.cliente_nombre, $json.mensaje_personalizado, 'prospección', 'error', $json.concesionario_id, $json.timestamp, JSON.stringify($json)] }}"
        }
      },
      "id": "log-error",
      "name": "Registrar Error Envío",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [2200, 500]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.index + 1 }}",
              "operation": "equal",
              "value2": "={{ $json.total }}"
            }
          ]
        }
      },
      "id": "is-last-message",
      "name": "¿Último Mensaje?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [2400, 300]
    },
    {
      "parameters": {
        "jsCode": "// Generar resumen de campaña de prospección\nconst processedData = $('Procesar Mensajes').all();\nconst successData = $('Registrar Envío Exitoso').all();\nconst errorData = $('Registrar Error Envío').all();\n\nconst stats = {\n  total_procesados: processedData.length,\n  exitosos: successData.length,\n  errores: errorData.length,\n  tasa_exito: processedData.length > 0 ? Math.round((successData.length / processedData.length) * 100) : 0\n};\n\nreturn [{\n  json: {\n    status: 'completed',\n    message: 'Campaña de prospección WhatsApp completada',\n    stats,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "generate-summary",
      "name": "Generar Resumen",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [2600, 300]
    },
    {
      "parameters": {
        "jsCode": "// Respuesta de error por payload inválido\nreturn [{\n  json: {\n    status: 'error',\n    message: 'Payload inválido para envío de prospección',\n    missing_fields: $json.missing_fields,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "error-response",
      "name": "Respuesta Error Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [800, 500]
    },
    {
      "parameters": {
        "jsCode": "// Respuesta cuando no hay configuración de WhatsApp\nreturn [{\n  json: {\n    status: 'error',\n    message: 'No se encontró configuración válida de WhatsApp para el concesionario',\n    tenant_id: $('Validar Payload').first().json.tenant_id,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "no-config-response",
      "name": "Sin Configuración WhatsApp",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1200, 500]
    },
    {
      "parameters": {
        "jsCode": "// Respuesta de error en procesamiento\nreturn [{\n  json: {\n    status: 'error',\n    message: 'Error en el procesamiento de mensajes',\n    error_details: $json,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "processing-error-response",
      "name": "Error Procesamiento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1600, 500]
    }
  ],
  "connections": {
    "Trigger del Workflow": { "main": [[{ "node": "Validar Payload", "type": "main", "index": 0 }]] },
    "Validar Payload": { "main": [[{ "node": "¿Payload Válido?", "type": "main", "index": 0 }]] },
    "¿Payload Válido?": { "main": [
      [{ "node": "Obtener Config WhatsApp", "type": "main", "index": 0 }],
      [{ "node": "Respuesta Error Payload", "type": "main", "index": 0 }]
    ] },
    "Obtener Config WhatsApp": { "main": [[{ "node": "¿Configuración Válida?", "type": "main", "index": 0 }]] },
    "¿Configuración Válida?": { "main": [
      [{ "node": "Procesar Mensajes", "type": "main", "index": 0 }],
      [{ "node": "Sin Configuración WhatsApp", "type": "main", "index": 0 }]
    ] },
    "Procesar Mensajes": { "main": [[{ "node": "¿Procesamiento Exitoso?", "type": "main", "index": 0 }]] },
    "¿Procesamiento Exitoso?": { "main": [
      [{ "node": "Esperar Rate Limit", "type": "main", "index": 0 }],
      [{ "node": "Error Procesamiento", "type": "main", "index": 0 }]
    ] },
    "Esperar Rate Limit": { "main": [[{ "node": "Enviar WhatsApp", "type": "main", "index": 0 }]] },
    "Enviar WhatsApp": { "main": [[{ "node": "¿Envío Exitoso?", "type": "main", "index": 0 }]] },
    "¿Envío Exitoso?": { "main": [
      [{ "node": "Registrar Envío Exitoso", "type": "main", "index": 0 }],
      [{ "node": "Registrar Error Envío", "type": "main", "index": 0 }]
    ] },
    "Registrar Envío Exitoso": { "main": [[{ "node": "¿Último Mensaje?", "type": "main", "index": 0 }]] },
    "Registrar Error Envío": { "main": [[{ "node": "¿Último Mensaje?", "type": "main", "index": 0 }]] },
    "¿Último Mensaje?": { "main": [
      [{ "node": "Generar Resumen", "type": "main", "index": 0 }]
    ] }
  },
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 1800
  }
}
