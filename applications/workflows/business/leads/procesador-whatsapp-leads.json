{
    "name": "Lead Processor WhatsApp - Fixed",
    "nodes": [
      {
        "parameters": {
          "httpMethod": "POST",
          "path": "webhook/whatsapp/lead",
          "responseMode": "responseNode",
          "options": {}
        },
        "id": "webhook-whatsapp-lead",
        "name": "WhatsApp Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 2,
        "position": [240, 300],
        "webhookId": "lead-whatsapp-webhook"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict"
            },
            "conditions": [
              {
                "leftValue": "={{ $json.object }}",
                "rightValue": "whatsapp_business_account",
                "operator": {
                  "type": "string",
                  "operation": "equals"
                }
              },
              {
                "leftValue": "={{ $json.entry[0].changes[0].field }}",
                "rightValue": "messages",
                "operator": {
                  "type": "string",
                  "operation": "equals"
                }
              }
            ],
            "combineOperation": "all"
          }
        },
        "id": "validate-webhook",
        "name": "Validate WhatsApp Webhook",
        "type": "n8n-nodes-base.if",
        "typeVersion": 2,
        "position": [460, 300]
      },
      {
        "parameters": {
          "jsCode": "try {\n  
        },
        "id": "extract-lead-data",
        "name": "Extract Lead Data",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [680, 300]
      },
      {
        "parameters": {
        },
        "id": "check-tenant-cache",
        "name": "Check Tenant Cache",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [900, 300]
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict"
            },
            "conditions": [
              {
                "leftValue": "={{ $json.tenant_config_source }}",
                "rightValue": "database",
                "operator": {
                  "type": "string",
                  "operation": "equals"
                }
              }
            ],
            "combineOperation": "all"
          }
        },
        "id": "cache-miss-condition",
        "name": "Cache Miss?",
        "type": "n8n-nodes-base.if",
        "typeVersion": 2,
        "position": [1120, 300]
      },
      {
        "parameters": {
          "method": "GET",
          "url": "={{ $vars.SUPABASE_URL }}/rest/v1/tenant_config",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpHeaderAuth",
          "headers": {
            "parameters": [
              {
                "name": "apikey",
                "value": "={{ $vars.SUPABASE_ANON_KEY }}"
              },
              {
                "name": "Authorization",
                "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
              },
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "qs": {
            "parameters": [
              {
                "name": "concesionario_id",
                "value": "eq.{{ $json.tenant_id }}"
              },
              {
                "name": "select",
                "value": "*"
              }
            ]
          },
          "options": {
            "timeout": 10000
          }
        },
        "id": "load-tenant-config-db",
        "name": "Load Config from Database",
        "type": "n8n-nodes-base.httpRequestV3",
        "typeVersion": 4.1,
        "position": [1340, 200]
      },
      {
        "parameters": {
        },
        "id": "update-cache",
        "name": "Update Cache",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [1560, 200]
      },
      {
        "parameters": {
          "jsCode": "
        },
        "id": "use-cached-config",
        "name": "Use Cached Config",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [1340, 400]
      },
      {
        "parameters": {
          "mode": "mergeByIndex",
          "options": {}
        },
        "id": "merge-config-paths",
        "name": "Merge Config Paths",
        "type": "n8n-nodes-base.merge",
        "typeVersion": 2.1,
        "position": [1780, 300]
      },
      {
        "parameters": {
          "jsCode": "try {\n  
        },
        "id": "prepare-ai-analysis",
        "name": "Prepare AI Analysis",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [1120, 300]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https:
          "authentication": "genericCredentialType",
          "genericAuthType": "httpHeaderAuth",
          "headers": {
            "parameters": [
              {
                "name": "x-goog-api-key",
                "value": "={{ $vars.GEMINI_API_KEY }}"
              },
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "body": {
            "parameters": [
              {
                "name": "contents",
                "value": "=[\n  {\n    \"parts\": [\n      {\n        \"text\": \"{{ $json.ai_prompt }}\"\n      }\n    ]\n  }\n]"
              },
              {
                "name": "generationConfig",
                "value": "={\n  \"temperature\": 0.3,\n  \"topK\": 40,\n  \"topP\": 0.95,\n  \"maxOutputTokens\": 1024\n}"
              }
            ]
          },
          "options": {
            "timeout": 15000
          }
        },
        "id": "gemini-ai-analysis",
        "name": "Gemini AI Analysis",
        "type": "n8n-nodes-base.httpRequestV3",
        "typeVersion": 4.1,
        "position": [1340, 300]
      },
      {
        "parameters": {
          "jsCode": "try {\n  
        },
        "id": "calculate-lead-score",
        "name": "Calculate Lead Score",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [1560, 300]
      },
      {
        "parameters": {
          "method": "GET",
          "url": "={{ $vars.SUPABASE_URL }}/rest/v1/usuarios",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpHeaderAuth",
          "headers": {
            "parameters": [
              {
                "name": "apikey",
                "value": "={{ $vars.SUPABASE_ANON_KEY }}"
              },
              {
                "name": "Authorization",
                "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
              }
            ]
          },
          "qs": {
            "parameters": [
              {
                "name": "concesionario_id",
                "value": "eq.{{ $json.tenant_id }}"
              },
              {
                "name": "rol",
                "value": "eq.asesor_ventas"
              },
              {
                "name": "activo",
                "value": "eq.true"
              },
              {
                "name": "select",
                "value": "id,nombre,email,especialidad,carga_actual"
              }
            ]
          },
          "options": {
            "timeout": 10000
          }
        },
        "id": "get-available-advisors",
        "name": "Get Available Advisors",
        "type": "n8n-nodes-base.httpRequestV3",
        "typeVersion": 4.1,
        "position": [1780, 300]
      },
      {
        "parameters": {
          "jsCode": "try {\n  
        },
        "id": "assign-advisor",
        "name": "Assign Advisor",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [2000, 300]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "={{ $vars.SUPABASE_URL }}/rest/v1/leads",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpHeaderAuth",
          "headers": {
            "parameters": [
              {
                "name": "apikey",
                "value": "={{ $vars.SUPABASE_ANON_KEY }}"
              },
              {
                "name": "Authorization",
                "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
              },
              {
                "name": "Content-Type",
                "value": "application/json"
              },
              {
                "name": "Prefer",
                "value": "return=representation"
              }
            ]
          },
          "body": {
            "parameters": [
              {
                "name": "body",
                "value": "={{ JSON.stringify($json.lead_data) }}"
              }
            ]
          },
          "options": {
            "timeout": 10000
          }
        },
        "id": "save-lead-supabase",
        "name": "Save Lead to Supabase",
        "type": "n8n-nodes-base.httpRequestV3",
        "typeVersion": 4.1,
        "position": [2220, 300]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "={{ $vars.SUPABASE_URL }}/rest/v1/rpc/incrementar_carga_asesor",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpHeaderAuth",
          "headers": {
            "parameters": [
              {
                "name": "apikey",
                "value": "={{ $vars.SUPABASE_ANON_KEY }}"
              },
              {
                "name": "Authorization",
                "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
              },
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "body": {
            "parameters": [
              {
                "name": "asesor_id",
                "value": "={{ $('Assign Advisor').first().json.notification_data.asesor.id }}"
              }
            ]
          },
          "options": {
            "timeout": 5000
          }
        },
        "id": "update-advisor-load",
        "name": "Update Advisor Load",
        "type": "n8n-nodes-base.httpRequestV3",
        "typeVersion": 4.1,
        "position": [2440, 300]
      },
      {
        "parameters": {
          "jsCode": "
        },
        "id": "prepare-email-notification",
        "name": "Prepare Email Notification",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [2660, 200]
      },
      {
        "parameters": {
          "jsCode": "
        },
        "id": "prepare-whatsapp-confirmation",
        "name": "Prepare WhatsApp Confirmation", 
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [2660, 400]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "={{ $vars.N8N_WEBHOOK_URL }}/webhook/send-email",
          "headers": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              },
              {
                "name": "Authorization",
                "value": "Bearer {{ $vars.N8N_WEBHOOK_AUTH_TOKEN || 'default-token' }}"
              }
            ]
          },
          "body": {
            "parameters": [
              {
                "name": "to",
                "value": "={{ $json.to }}"
              },
              {
                "name": "subject", 
                "value": "={{ $json.subject }}"
              },
              {
                "name": "html",
                "value": "={{ $json.html }}"
              },
              {
                "name": "tenant_id",
                "value": "={{ $json.tenant_config.concesionario_id }}"
              },
              {
                "name": "lead_id",
                "value": "={{ $json.lead_id }}"
              }
            ]
          },
          "options": {
            "timeout": 10000
          }
        },
        "id": "send-email-notification",
        "name": "Send Email Notification",
        "type": "n8n-nodes-base.httpRequestV3",
        "typeVersion": 4.1,
        "position": [2880, 200]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https:
          "authentication": "genericCredentialType", 
          "genericAuthType": "httpHeaderAuth",
          "headers": {
            "parameters": [
              {
                "name": "Authorization",
                "value": "Bearer {{ $vars.WHATSAPP_ACCESS_TOKEN }}"
              },
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "body": {
            "parameters": [
              {
                "name": "messaging_product",
                "value": "whatsapp"
              },
              {
                "name": "to",
                "value": "={{ $json.to }}"
              },
              {
                "name": "type", 
                "value": "text"
              },
              {
                "name": "text",
                "value": "={ \"body\": \"{{ $json.message.replace(/\"/g, '\\\\\"') }}\" }"
              }
            ]
          },
          "options": {
            "timeout": 10000
          }
        },
        "id": "send-whatsapp-confirmation",
        "name": "Send WhatsApp Confirmation",
        "type": "n8n-nodes-base.httpRequestV3",
        "typeVersion": 4.1,
        "position": [2880, 400]
      },
      {
        "parameters": {
          "respondWith": "json",
          "responseBody": "={\n  \"status\": \"success\",\n  \"message\": \"Lead procesado correctamente\",\n  \"data\": {\n    \"lead_id\": \"{{ $('Save Lead to Supabase').first().json[0]?.id }}\",\n    \"score\": {{ $('Calculate Lead Score').first().json.score_calidad }},\n    \"nivel_interes\": \"{{ $('Calculate Lead Score').first().json.nivel_interes }}\",\n    \"asesor_asignado\": \"{{ $('Assign Advisor').first().json.notification_data.asesor.nombre }}\",\n    \"asesor_email\": \"{{ $('Assign Advisor').first().json.notification_data.asesor.email }}\",\n    \"intencion_detectada\": \"{{ $('Calculate Lead Score').first().json.intencion_detectada }}\",\n    \"urgencia\": \"{{ $('Calculate Lead Score').first().json.urgencia }}\",\n    \"modelo_interes\": \"{{ $('Calculate Lead Score').first().json.modelo_interes || 'No especificado' }}\"\n  },\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"processing_time_ms\": \"{{ Date.now() - new Date($('Extract Lead Data').first().json.webhook_timestamp).getTime() }}\"\n}",
          "options": {
            "responseCode": 200
          }
        },
        "id": "webhook-response",
        "name": "Webhook Success Response",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 2,
        "position": [3100, 300]
      },
      {
        "parameters": {
          "respondWith": "json",
          "responseBody": "={\n  \"status\": \"error\",\n  \"message\": \"Webhook inválido: no es un mensaje de WhatsApp Business válido\",\n  \"error_details\": {\n    \"expected_object\": \"whatsapp_business_account\",\n    \"expected_field\": \"messages\",\n    \"received_object\": \"{{ $json.object || 'undefined' }}\",\n    \"received_field\": \"{{ $json.entry?.[0]?.changes?.[0]?.field || 'undefined' }}\"\n  },\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
          "options": {
            "responseCode": 400
          }
        },
        "id": "invalid-webhook-response",
        "name": "Invalid Webhook Response",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 2,
        "position": [460, 500]
      },
      {
        "parameters": {
          "respondWith": "json",
          "responseBody": "={\n  \"status\": \"error\",\n  \"message\": \"Error interno procesando el lead\",\n  \"error_details\": \"{{ $json.error?.message || 'Error desconocido' }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"support\": \"Contacte al administrador del sistema\"\n}",
          "options": {
            "responseCode": 500
          }
        },
        "id": "error-response",
        "name": "Error Response",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 2,
        "position": [1340, 500]
      }
    ],
    "connections": {
      "WhatsApp Webhook": {
        "main": [
          [
            {
              "node": "Validate WhatsApp Webhook",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Validate WhatsApp Webhook": {
        "main": [
          [
            {
              "node": "Extract Lead Data",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Invalid Webhook Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Extract Lead Data": {
        "main": [
          [
            {
              "node": "Check Tenant Cache",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Check Tenant Cache": {
        "main": [
          [
            {
              "node": "Cache Miss?",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Cache Miss?": {
        "main": [
          [
            {
              "node": "Load Config from Database",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Use Cached Config",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Load Config from Database": {
        "main": [
          [
            {
              "node": "Update Cache",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update Cache": {
        "main": [
          [
            {
              "node": "Merge Config Paths",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Use Cached Config": {
        "main": [
          [
            {
              "node": "Merge Config Paths",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Merge Config Paths": {
        "main": [
          [
            {
              "node": "Prepare AI Analysis",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Prepare AI Analysis": {
        "main": [
          [
            {
              "node": "Gemini AI Analysis",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Gemini AI Analysis": {
        "main": [
          [
            {
              "node": "Calculate Lead Score",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Calculate Lead Score": {
        "main": [
          [
            {
              "node": "Get Available Advisors",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Available Advisors": {
        "main": [
          [
            {
              "node": "Assign Advisor",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Assign Advisor": {
        "main": [
          [
            {
              "node": "Save Lead to Supabase",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Save Lead to Supabase": {
        "main": [
          [
            {
              "node": "Update Advisor Load",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update Advisor Load": {
        "main": [
          [
            {
              "node": "Prepare Email Notification",
              "type": "main",
              "index": 0
            },
            {
              "node": "Prepare WhatsApp Confirmation",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Prepare Email Notification": {
        "main": [
          [
            {
              "node": "Send Email Notification",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Prepare WhatsApp Confirmation": {
        "main": [
          [
            {
              "node": "Send WhatsApp Confirmation",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Send Email Notification": {
        "main": [
          [
            {
              "node": "Webhook Success Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Send WhatsApp Confirmation": {
        "main": [
          [
            {
              "node": "Webhook Success Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "settings": {
      "executionOrder": "v1",
      "saveManualExecutions": true,
      "callerPolicy": "workflowsFromSameOwner",
      "errorWorkflow": ""
    },
    "staticData": null,
    "tags": [
      {
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z",
        "id": "leads",
        "name": "leads"
      },
      {
        "createdAt": "2024-01-01T00:00:00.000Z", 
        "updatedAt": "2024-01-01T00:00:00.000Z",
        "id": "whatsapp",
        "name": "whatsapp"
      },
      {
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z", 
        "id": "ai",
        "name": "ai"
      },
      {
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z", 
        "id": "production-ready",
        "name": "production-ready"
      }
    ],
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "id": "lead-processor-whatsapp-fixed",
    "versionId": "2.0.0"
  }