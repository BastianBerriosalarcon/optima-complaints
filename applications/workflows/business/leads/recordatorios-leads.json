{
  "name": "Recordatorios de Leads",
  "description": "Sistema automatizado de recordatorios para leads seg√∫n pol√≠ticas de escalaci√≥n",
  "tags": ["leads", "recordatorios", "escalaci√≥n", "seguimiento", "asesores"],
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "schedule-trigger",
      "name": "Programar Recordatorios",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Validar configuraci√≥n de recordatorios\ntry {\n  const configuracion = {\n    intervalos_horas: 2,\n    max_recordatorios_batch: 30,\n    politicas_escalacion: {\n      primer_contacto: {\n        tiempo_limite_horas: 2,\n        prioridad: 'alta',\n        ventana_maxima_horas: 48\n      },\n      seguimiento_inactivo: {\n        tiempo_limite_horas: 24,\n        prioridad: 'media',\n        ventana_maxima_dias: 30\n      },\n      escalacion_critica: {\n        tiempo_limite_horas: 4,\n        prioridad: 'critica',\n        solo_alta_prioridad: true\n      },\n      reactivacion_tibio: {\n        tiempo_limite_dias: 7,\n        prioridad: 'baja',\n        ventana_maxima_dias: 60\n      }\n    },\n    frecuencia_minima_recordatorios_horas: 4,\n    templates_disponibles: ['primer_contacto', 'seguimiento', 'escalacion', 'reactivacion'],\n    timestamp: new Date().toISOString()\n  };\n  \n  return [{\n    json: {\n      configuracion_valida: true,\n      configuracion,\n      estado: 'inicializado'\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      configuracion_valida: false,\n      error: error.message,\n      estado: 'error_configuracion',\n      timestamp: new Date().toISOString()\n    }\n  }];\n}"
      },
      "id": "validate-config",
      "name": "Validar Configuraci√≥n",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [400, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": { "caseSensitive": true, "typeValidation": "strict" },
          "conditions": [
            {
              "leftValue": "={{ $json.configuracion_valida }}",
              "operator": { "type": "boolean", "operation": "isTrue" },
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-config-valid",
      "name": "¬øConfiguraci√≥n V√°lida?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [600, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH politicas AS (\n  SELECT \n    $1::integer as primer_contacto_horas,\n    $2::integer as seguimiento_horas,\n    $3::integer as escalacion_horas,\n    $4::integer as reactivacion_dias,\n    $5::integer as frecuencia_minima_horas,\n    $6::integer as max_resultados\n),\nleads_requieren_recordatorio AS (\n  -- Leads asignados sin primer contacto\n  SELECT \n    'primer_contacto' as tipo_recordatorio,\n    'alta' as prioridad,\n    l.id as lead_id,\n    l.nombre_cliente,\n    l.telefono_cliente,\n    l.modelo_interes,\n    l.estado,\n    l.prioridad_seguimiento as lead_prioridad,\n    l.concesionario_id,\n    c.nombre as concesionario_nombre,\n    l.asesor_asignado_id,\n    a.nombre as asesor_nombre,\n    a.email as asesor_email,\n    l.fecha_asignacion,\n    EXTRACT(EPOCH FROM (NOW() - l.fecha_asignacion))/3600 as horas_sin_contacto,\n    NULL::numeric as dias_sin_contacto\n  FROM leads l\n  JOIN concesionarios c ON l.concesionario_id = c.id\n  LEFT JOIN asesores a ON l.asesor_asignado_id = a.id\n  CROSS JOIN politicas p\n  WHERE l.estado = 'asignado'\n    AND l.fecha_primer_contacto IS NULL\n    AND l.fecha_asignacion < NOW() - INTERVAL '1 hour' * p.primer_contacto_horas\n    AND l.fecha_asignacion > NOW() - INTERVAL '48 hours'\n    AND a.activo = true\n    \n  UNION ALL\n  \n  -- Leads en seguimiento sin actividad reciente\n  SELECT \n    'seguimiento_inactivo' as tipo_recordatorio,\n    CASE WHEN l.prioridad_seguimiento = 'alta' THEN 'alta' ELSE 'media' END as prioridad,\n    l.id as lead_id,\n    l.nombre_cliente,\n    l.telefono_cliente,\n    l.modelo_interes,\n    l.estado,\n    l.prioridad_seguimiento as lead_prioridad,\n    l.concesionario_id,\n    c.nombre as concesionario_nombre,\n    l.asesor_asignado_id,\n    a.nombre as asesor_nombre,\n    a.email as asesor_email,\n    l.fecha_ultimo_seguimiento,\n    EXTRACT(EPOCH FROM (NOW() - COALESCE(l.fecha_ultimo_seguimiento, l.fecha_primer_contacto)))/3600 as horas_sin_contacto,\n    NULL::numeric as dias_sin_contacto\n  FROM leads l\n  JOIN concesionarios c ON l.concesionario_id = c.id\n  LEFT JOIN asesores a ON l.asesor_asignado_id = a.id\n  CROSS JOIN politicas p\n  WHERE l.estado IN ('contactado', 'en_seguimiento')\n    AND COALESCE(l.fecha_ultimo_seguimiento, l.fecha_primer_contacto) < NOW() - INTERVAL '1 hour' * p.seguimiento_horas\n    AND l.fecha_creacion > NOW() - INTERVAL '30 days'\n    AND a.activo = true\n    \n  UNION ALL\n  \n  -- Leads prioritarios sin actividad - Escalaci√≥n cr√≠tica\n  SELECT \n    'escalacion_critica' as tipo_recordatorio,\n    'critica' as prioridad,\n    l.id as lead_id,\n    l.nombre_cliente,\n    l.telefono_cliente,\n    l.modelo_interes,\n    l.estado,\n    l.prioridad_seguimiento as lead_prioridad,\n    l.concesionario_id,\n    c.nombre as concesionario_nombre,\n    l.asesor_asignado_id,\n    a.nombre as asesor_nombre,\n    a.email as asesor_email,\n    l.fecha_asignacion,\n    EXTRACT(EPOCH FROM (NOW() - l.fecha_asignacion))/3600 as horas_sin_contacto,\n    NULL::numeric as dias_sin_contacto\n  FROM leads l\n  JOIN concesionarios c ON l.concesionario_id = c.id\n  LEFT JOIN asesores a ON l.asesor_asignado_id = a.id\n  CROSS JOIN politicas p\n  WHERE l.prioridad_seguimiento = 'alta'\n    AND l.estado = 'asignado'\n    AND l.fecha_primer_contacto IS NULL\n    AND l.fecha_asignacion < NOW() - INTERVAL '1 hour' * p.escalacion_horas\n    AND a.activo = true\n    \n  UNION ALL\n  \n  -- Leads tibios que requieren reactivaci√≥n\n  SELECT \n    'reactivacion_tibio' as tipo_recordatorio,\n    'baja' as prioridad,\n    l.id as lead_id,\n    l.nombre_cliente,\n    l.telefono_cliente,\n    l.modelo_interes,\n    l.estado,\n    l.prioridad_seguimiento as lead_prioridad,\n    l.concesionario_id,\n    c.nombre as concesionario_nombre,\n    l.asesor_asignado_id,\n    a.nombre as asesor_nombre,\n    a.email as asesor_email,\n    l.fecha_ultimo_seguimiento,\n    NULL::numeric as horas_sin_contacto,\n    EXTRACT(EPOCH FROM (NOW() - COALESCE(l.fecha_ultimo_seguimiento, l.fecha_primer_contacto)))/86400 as dias_sin_contacto\n  FROM leads l\n  JOIN concesionarios c ON l.concesionario_id = c.id\n  LEFT JOIN asesores a ON l.asesor_asignado_id = a.id\n  CROSS JOIN politicas p\n  WHERE l.estado IN ('contactado', 'en_seguimiento')\n    AND COALESCE(l.fecha_ultimo_seguimiento, l.fecha_primer_contacto) < NOW() - INTERVAL '1 day' * p.reactivacion_dias\n    AND l.fecha_creacion > NOW() - INTERVAL '60 days'\n    AND a.activo = true\n)\nSELECT \n  lrr.*\nFROM leads_requieren_recordatorio lrr\nCROSS JOIN politicas p\nWHERE NOT EXISTS (\n  SELECT 1 FROM recordatorios_leads rl\n  WHERE rl.lead_id = lrr.lead_id\n    AND rl.tipo_recordatorio = lrr.tipo_recordatorio\n    AND rl.enviado_at > NOW() - INTERVAL '1 hour' * p.frecuencia_minima_horas\n)\nORDER BY \n  CASE lrr.prioridad\n    WHEN 'critica' THEN 1\n    WHEN 'alta' THEN 2\n    WHEN 'media' THEN 3\n    WHEN 'baja' THEN 4\n  END,\n  COALESCE(lrr.horas_sin_contacto, lrr.dias_sin_contacto * 24) DESC\nLIMIT (SELECT max_resultados FROM politicas);",
        "additionalFields": {
          "queryParameters": "={{ [\n  $json.configuracion.politicas_escalacion.primer_contacto.tiempo_limite_horas,\n  $json.configuracion.politicas_escalacion.seguimiento_inactivo.tiempo_limite_horas,\n  $json.configuracion.politicas_escalacion.escalacion_critica.tiempo_limite_horas,\n  $json.configuracion.politicas_escalacion.reactivacion_tibio.tiempo_limite_dias,\n  $json.configuracion.frecuencia_minima_recordatorios_horas,\n  $json.configuracion.max_recordatorios_batch\n] }}"
        }
      },
      "id": "get-pending-reminders",
      "name": "Obtener Recordatorios Pendientes",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [800, 300]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $input.all().length }}",
              "operation": "greaterThan",
              "value2": 0
            }
          ]
        }
      },
      "id": "has-reminders",
      "name": "¬øHay Recordatorios?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [1000, 300]
    },
    {
      "parameters": {
        "jsCode": "// Procesar y categorizar recordatorios con validaci√≥n robusta\ntry {\n  const items = $input.all();\n  const configuracion = $('Validar Configuraci√≥n').first().json.configuracion;\n  \n  // Templates de recordatorios\n  const templates = {\n    primer_contacto: {\n      titulo: '‚è∞ Recordatorio: Lead sin contactar',\n      urgencia: 'media',\n      accion: 'Contactar al cliente inmediatamente',\n      template_email: 'primer_contacto',\n      color: '#FF8800'\n    },\n    seguimiento_inactivo: {\n      titulo: 'üìã Recordatorio: Lead requiere seguimiento',\n      urgencia: 'media',\n      accion: 'Realizar seguimiento programado',\n      template_email: 'seguimiento',\n      color: '#0088FF'\n    },\n    escalacion_critica: {\n      titulo: 'üö® ESCALACI√ìN: Lead prioritario abandonado',\n      urgencia: 'critica',\n      accion: 'Intervenci√≥n inmediata requerida',\n      template_email: 'escalacion',\n      color: '#FF0000'\n    },\n    reactivacion_tibio: {\n      titulo: 'üîÑ Recordatorio: Reactivar lead tibio',\n      urgencia: 'baja',\n      accion: 'Intentar reactivaci√≥n del cliente',\n      template_email: 'reactivacion',\n      color: '#888888'\n    }\n  };\n  \n  const recordatorios = [];\n  \n  for (const item of items) {\n    const data = item.json;\n    const template = templates[data.tipo_recordatorio];\n    \n    if (!template) {\n      console.log(`Template no encontrado para: ${data.tipo_recordatorio}`);\n      continue;\n    }\n    \n    // Validar datos esenciales\n    if (!data.lead_id || !data.asesor_email || !data.nombre_cliente) {\n      console.log(`Datos incompletos para recordatorio: ${data.lead_id}`);\n      continue;\n    }\n    \n    // Calcular tiempo transcurrido legible\n    let tiempoTranscurrido = '';\n    if (data.horas_sin_contacto !== null && data.horas_sin_contacto !== undefined) {\n      const horas = Math.floor(data.horas_sin_contacto);\n      const mins = Math.floor((data.horas_sin_contacto % 1) * 60);\n      if (horas >= 24) {\n        const dias = Math.floor(horas / 24);\n        const horasRest = horas % 24;\n        tiempoTranscurrido = `${dias}d ${horasRest}h sin contacto`;\n      } else {\n        tiempoTranscurrido = `${horas}h ${mins}m sin contacto`;\n      }\n    } else if (data.dias_sin_contacto !== null && data.dias_sin_contacto !== undefined) {\n      tiempoTranscurrido = `${Math.floor(data.dias_sin_contacto)} d√≠as sin contacto`;\n    } else {\n      tiempoTranscurrido = 'Tiempo no calculado';\n    }\n    \n    const recordatorio = {\n      // Datos b√°sicos validados\n      tipo_recordatorio: data.tipo_recordatorio,\n      prioridad: data.prioridad,\n      titulo: template.titulo,\n      urgencia: template.urgencia,\n      accion_requerida: template.accion,\n      template_email: template.template_email,\n      color: template.color,\n      \n      // Datos del lead validados\n      lead_id: data.lead_id,\n      cliente_nombre: data.nombre_cliente || 'Cliente sin nombre',\n      cliente_telefono: data.telefono_cliente || 'Sin tel√©fono',\n      modelo_interes: data.modelo_interes || 'No especificado',\n      estado_lead: data.estado || 'Desconocido',\n      prioridad_lead: data.lead_prioridad || 'media',\n      \n      // Datos del concesionario\n      concesionario_id: data.concesionario_id,\n      concesionario_nombre: data.concesionario_nombre || 'Concesionario no identificado',\n      \n      // Datos del asesor\n      asesor_id: data.asesor_asignado_id,\n      asesor_nombre: data.asesor_nombre || 'Asesor sin nombre',\n      asesor_email: data.asesor_email,\n      \n      // Tiempo y m√©tricas\n      tiempo_transcurrido: tiempoTranscurrido,\n      horas_sin_contacto: data.horas_sin_contacto,\n      dias_sin_contacto: data.dias_sin_contacto,\n      \n      // Metadatos\n      timestamp: new Date().toISOString(),\n      requiere_escalamiento: data.prioridad === 'critica',\n      requiere_cc_supervisor: template.urgencia === 'critica',\n      link_crm: `https://crm.optimacx.com/leads/${data.lead_id}`,\n      link_whatsapp: `https://wa.me/${(data.telefono_cliente || '').replace(/\\D/g, '')}`,\n      \n      // Estado de procesamiento\n      procesado: true,\n      errores: []\n    };\n    \n    recordatorios.push({ json: recordatorio });\n  }\n  \n  if (recordatorios.length === 0) {\n    return [{\n      json: {\n        procesado: false,\n        message: 'No hay recordatorios v√°lidos para procesar',\n        total_items: items.length,\n        timestamp: new Date().toISOString()\n      }\n    }];\n  }\n  \n  return recordatorios;\n  \n} catch (error) {\n  return [{\n    json: {\n      status: 'error',\n      message: 'Error al procesar recordatorios',\n      error: error.message,\n      timestamp: new Date().toISOString()\n    }\n  }];\n}"
      },
      "id": "process-reminders",
      "name": "Procesar Recordatorios",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1200, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": { "caseSensitive": true, "typeValidation": "strict" },
          "conditions": [
            {
              "leftValue": "={{ $json.procesado }}",
              "operator": { "type": "boolean", "operation": "isTrue" },
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-processed",
      "name": "¬øProcesado Correctamente?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1400, 300]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "send",
        "email": "={{ $json.asesor_email }}",
        "cc": "={{ $json.requiere_cc_supervisor ? 'supervisor@' + $json.concesionario_id + '.optimacx.com' : '' }}",
        "subject": "={{ $json.titulo }} - {{ $json.cliente_nombre }}",
        "emailFormat": "html",
        "message": "=<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    .recordatorio { font-family: Arial; padding: 20px; border-left: 5px solid {{ $json.color }}; margin: 10px 0; }\n    .header { font-size: 18px; font-weight: bold; color: {{ $json.color }}; margin-bottom: 15px; }\n    .datos-lead { background: #f5f5f5; padding: 15px; margin: 10px 0; border-radius: 5px; }\n    .tiempo { background: #fff3cd; padding: 10px; margin: 10px 0; border-radius: 5px; font-weight: bold; }\n    .accion { background: #d4edda; padding: 10px; margin: 10px 0; border-radius: 5px; font-weight: bold; }\n    .acciones-rapidas { background: #e6f3ff; padding: 15px; margin: 10px 0; border-radius: 5px; }\n    .recordatorio-especial { background: #f8d7da; padding: 10px; margin: 10px 0; border-radius: 5px; }\n    .footer { font-size: 12px; color: #666; margin-top: 20px; }\n  </style>\n</head>\n<body>\n  <div class=\"recordatorio\">\n    <div class=\"header\">{{ $json.titulo.toUpperCase() }}</div>\n    \n    <div class=\"datos-lead\">\n      <strong>üë§ Detalles del Lead:</strong><br>\n      ‚Ä¢ <strong>Cliente:</strong> {{ $json.cliente_nombre }}<br>\n      ‚Ä¢ <strong>Tel√©fono:</strong> {{ $json.cliente_telefono }}<br>\n      ‚Ä¢ <strong>Modelo de Inter√©s:</strong> {{ $json.modelo_interes }}<br>\n      ‚Ä¢ <strong>Estado Actual:</strong> {{ $json.estado_lead.toUpperCase() }}<br>\n      ‚Ä¢ <strong>Prioridad:</strong> {{ $json.prioridad_lead.toUpperCase() }}<br>\n      ‚Ä¢ <strong>Concesionario:</strong> {{ $json.concesionario_nombre }}\n    </div>\n    \n    <div class=\"tiempo\">\n      <strong>‚è∞ Tiempo sin Contacto:</strong><br>\n      {{ $json.tiempo_transcurrido }}\n    </div>\n    \n    <div class=\"accion\">\n      <strong>‚ö° Acci√≥n Requerida:</strong><br>\n      {{ $json.accion_requerida }}\n    </div>\n    \n    {{ $json.urgencia === 'critica' ? '<div class=\"recordatorio-especial\"><strong>üö® NOTA CR√çTICA:</strong> Este es un lead de alta prioridad que requiere atenci√≥n INMEDIATA. Se ha escalado autom√°ticamente al supervisor.</div>' : '' }}\n    \n    <div class=\"acciones-rapidas\">\n      <strong>üîó Acciones R√°pidas:</strong><br>\n      ‚Ä¢ <a href=\"{{ $json.link_crm }}\" target=\"_blank\">Ver Lead en CRM</a><br>\n      ‚Ä¢ <strong>Llamar Cliente:</strong> {{ $json.cliente_telefono }}<br>\n      ‚Ä¢ <a href=\"{{ $json.link_whatsapp }}\" target=\"_blank\">WhatsApp</a>\n    </div>\n    \n    <div class=\"recordatorio-especial\">\n      <strong>üí° Recordatorio:</strong><br>\n      {{ $json.template_email === 'primer_contacto' ? 'El primer contacto es crucial para la conversi√≥n. Contacte al cliente dentro de las pr√≥ximas 2 horas.' : '' }}\n      {{ $json.template_email === 'seguimiento' ? 'Mantenga el momentum del lead. Un seguimiento oportuno mejora las posibilidades de venta.' : '' }}\n      {{ $json.template_email === 'escalacion' ? 'Lead prioritario abandonado. Requiere intervenci√≥n inmediata para evitar p√©rdida.' : '' }}\n      {{ $json.template_email === 'reactivacion' ? 'Oportunidad de reactivar cliente tibio. Use t√©cnicas de reconexi√≥n para regenerar inter√©s.' : '' }}\n    </div>\n    \n    <div class=\"footer\">\n      Sistema de Recordatorios OptimaCX<br>\n      Fecha: {{ new Date($json.timestamp).toLocaleString() }}\n    </div>\n  </div>\n</body>\n</html>",
        "options": {
          "priority": "={{ $json.urgencia === 'critica' ? 'high' : 'normal' }}"
        }
      },
      "id": "send-reminder-email",
      "name": "Enviar Email Recordatorio",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [1600, 300]
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "recordatorios_leads",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "lead_id": "={{ $json.lead_id }}",
            "asesor_id": "={{ $json.asesor_id }}",
            "tipo_recordatorio": "={{ $json.tipo_recordatorio }}",
            "prioridad": "={{ $json.prioridad }}",
            "titulo": "={{ $json.titulo }}",
            "template_usado": "={{ $json.template_email }}",
            "destinatario_email": "={{ $json.asesor_email }}",
            "tiene_cc_supervisor": "={{ $json.requiere_cc_supervisor }}",
            "tiempo_sin_contacto": "={{ $json.tiempo_transcurrido }}",
            "estado": "enviado",
            "enviado_at": "={{ $json.timestamp }}",
            "metadata": "={{ JSON.stringify({\n  horas_sin_contacto: $json.horas_sin_contacto,\n  dias_sin_contacto: $json.dias_sin_contacto,\n  urgencia: $json.urgencia,\n  escalado: $json.requiere_escalamiento,\n  cliente_nombre: $json.cliente_nombre,\n  modelo_interes: $json.modelo_interes\n}) }}"
          }
        }
      },
      "id": "log-reminder",
      "name": "Registrar Recordatorio",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [1800, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.requiere_escalamiento }}",
              "operation": "equal",
              "value2": true
            }
          ]
        }
      },
      "id": "requires-escalation",
      "name": "¬øRequiere Escalaci√≥n?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [1800, 500]
    },
    {
      "parameters": {
        "operation": "create",
        "resource": "execution",
        "workflowId": "notificaciones-leads",
        "data": "={{ JSON.stringify({\n  tipo_notificacion: 'escalacion_recordatorio',\n  lead_id: $json.lead_id,\n  concesionario_id: $json.concesionario_id,\n  prioridad: 'critica',\n  mensaje: 'Recordatorio escalado por falta de atenci√≥n: ' + $json.titulo,\n  datos_escalacion: {\n    tipo_recordatorio: $json.tipo_recordatorio,\n    tiempo_transcurrido: $json.tiempo_transcurrido,\n    asesor_original: $json.asesor_nombre\n  }\n}) }}"
      },
      "id": "trigger-escalation",
      "name": "Escalar Recordatorio",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 2.1,
      "position": [2000, 500]
    },
    {
      "parameters": {
        "jsCode": "// Generar resumen de recordatorios enviados\ntry {\n  const recordatorios = $input.all();\n  \n  const resumen = {\n    total_recordatorios: recordatorios.length,\n    por_tipo: {},\n    por_prioridad: {},\n    por_urgencia: {},\n    escalados: 0,\n    con_supervisor: 0,\n    asesores_notificados: new Set(),\n    concesionarios_afectados: new Set(),\n    errores: 0,\n    timestamp: new Date().toISOString(),\n    estado: 'completado'\n  };\n  \n  for (const recordatorio of recordatorios) {\n    const data = recordatorio.json;\n    \n    // Verificar si es respuesta de error\n    if (data.status === 'error') {\n      resumen.errores++;\n      continue;\n    }\n    \n    // Contar por tipo\n    resumen.por_tipo[data.tipo_recordatorio] = (resumen.por_tipo[data.tipo_recordatorio] || 0) + 1;\n    \n    // Contar por prioridad\n    resumen.por_prioridad[data.prioridad] = (resumen.por_prioridad[data.prioridad] || 0) + 1;\n    \n    // Contar por urgencia\n    resumen.por_urgencia[data.urgencia] = (resumen.por_urgencia[data.urgencia] || 0) + 1;\n    \n    // Contar especiales\n    if (data.requiere_escalamiento) resumen.escalados++;\n    if (data.requiere_cc_supervisor) resumen.con_supervisor++;\n    \n    // Recopilar asesores y concesionarios √∫nicos\n    if (data.asesor_email) resumen.asesores_notificados.add(data.asesor_email);\n    if (data.concesionario_id) resumen.concesionarios_afectados.add(data.concesionario_id);\n  }\n  \n  // Convertir Sets a n√∫meros\n  resumen.asesores_unicos = resumen.asesores_notificados.size;\n  resumen.concesionarios_unicos = resumen.concesionarios_afectados.size;\n  delete resumen.asesores_notificados;\n  delete resumen.concesionarios_afectados;\n  \n  return [{ json: resumen }];\n  \n} catch (error) {\n  return [{\n    json: {\n      status: 'error',\n      message: 'Error al generar resumen',\n      error: error.message,\n      timestamp: new Date().toISOString()\n    }\n  }];\n}"
      },
      "id": "generate-summary",
      "name": "Generar Resumen",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [2000, 300]
    },
    {
      "parameters": {
        "jsCode": "// Respuesta de error por configuraci√≥n inv√°lida\nreturn [{\n  json: {\n    status: 'error',\n    message: 'Configuraci√≥n de recordatorios inv√°lida',\n    error_details: $json,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "config-error-response",
      "name": "Error Configuraci√≥n",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [800, 500]
    },
    {
      "parameters": {
        "jsCode": "// Respuesta cuando no hay recordatorios pendientes\nreturn [{\n  json: {\n    status: 'success',\n    message: 'No hay recordatorios pendientes',\n    total_leads_revisados: 0,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "no-reminders-response",
      "name": "Sin Recordatorios",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1200, 500]
    },
    {
      "parameters": {
        "jsCode": "// Respuesta de error en procesamiento\nreturn [{\n  json: {\n    status: 'error',\n    message: 'Error en el procesamiento de recordatorios',\n    error_details: $json,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "processing-error-response",
      "name": "Error Procesamiento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1600, 500]
    }
  ],
  "connections": {
    "Programar Recordatorios": { "main": [[{ "node": "Validar Configuraci√≥n", "type": "main", "index": 0 }]] },
    "Validar Configuraci√≥n": { "main": [[{ "node": "¬øConfiguraci√≥n V√°lida?", "type": "main", "index": 0 }]] },
    "¬øConfiguraci√≥n V√°lida?": { "main": [
      [{ "node": "Obtener Recordatorios Pendientes", "type": "main", "index": 0 }],
      [{ "node": "Error Configuraci√≥n", "type": "main", "index": 0 }]
    ] },
    "Obtener Recordatorios Pendientes": { "main": [[{ "node": "¬øHay Recordatorios?", "type": "main", "index": 0 }]] },
    "¬øHay Recordatorios?": { "main": [
      [{ "node": "Procesar Recordatorios", "type": "main", "index": 0 }],
      [{ "node": "Sin Recordatorios", "type": "main", "index": 0 }]
    ] },
    "Procesar Recordatorios": { "main": [[{ "node": "¬øProcesado Correctamente?", "type": "main", "index": 0 }]] },
    "¬øProcesado Correctamente?": { "main": [
      [{ "node": "Enviar Email Recordatorio", "type": "main", "index": 0 }],
      [{ "node": "Error Procesamiento", "type": "main", "index": 0 }]
    ] },
    "Enviar Email Recordatorio": { "main": [
      [{ "node": "Registrar Recordatorio", "type": "main", "index": 0 }],
      [{ "node": "¬øRequiere Escalaci√≥n?", "type": "main", "index": 0 }]
    ] },
    "Registrar Recordatorio": { "main": [[{ "node": "Generar Resumen", "type": "main", "index": 0 }]] },
    "¬øRequiere Escalaci√≥n?": { "main": [
      [{ "node": "Escalar Recordatorio", "type": "main", "index": 0 }]
    ] },
    "Escalar Recordatorio": { "main": [[{ "node": "Generar Resumen", "type": "main", "index": 0 }]] }
  },
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 300
  }
}
