{
  "name": "Actualizador Autom√°tico de Estados de Leads",
  "description": "Workflow que gestiona autom√°ticamente las transiciones de estados de leads (Nuevo‚ÜíContactado‚ÜíCotizado‚ÜíVendido/Perdido) basado en acciones detectadas y tiempo transcurrido.",
  "tags": [
    "leads",
    "estados", 
    "transiciones",
    "automatizacion",
    "ventas",
    "critico"
  ],
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 15
            }
          ]
        }
      },
      "id": "schedule-trigger",
      "name": "Ejecutar cada 15 minutos",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/webhook/update-lead-status",
        "options": {
          "responseData": "firstEntryJson"
        }
      },
      "id": "manual-update-webhook",
      "name": "Webhook Actualizaci√≥n Manual",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 450]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Buscar leads que requieren actualizaci√≥n autom√°tica de estado\nSELECT \n  l.id,\n  l.concesionario_id,\n  l.telefono_cliente,\n  l.nombre_cliente,\n  l.email_cliente,\n  l.mensaje_original,\n  l.modelo_interes,\n  l.score_calidad,\n  l.nivel_interes,\n  l.asesor_asignado_id,\n  l.estado,\n  l.fecha_creacion,\n  l.fecha_primer_contacto,\n  l.fecha_cotizacion,\n  l.fecha_cierre,\n  l.monto_cotizacion,\n  l.motivo_perdida,\n  \n  -- Informaci√≥n del asesor\n  asesor.nombre as asesor_nombre,\n  asesor.email as asesor_email,\n  \n  -- Informaci√≥n del concesionario\n  c.nombre as concesionario_nombre,\n  \n  -- C√°lculos de tiempo\n  EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - l.fecha_creacion))/3600 as horas_desde_creacion,\n  EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - COALESCE(l.fecha_primer_contacto, l.fecha_creacion)))/3600 as horas_desde_contacto,\n  EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - COALESCE(l.fecha_cotizacion, l.fecha_creacion)))/3600 as horas_desde_cotizacion,\n  \n  -- Detectar actividad reciente del asesor\n  CASE \n    WHEN EXISTS (\n      SELECT 1 FROM interacciones_leads il \n      WHERE il.lead_id = l.id \n      AND il.tipo IN ('llamada', 'whatsapp', 'email') \n      AND il.created_at > CURRENT_TIMESTAMP - INTERVAL '4 hours'\n      AND il.usuario_id = l.asesor_asignado_id\n    ) THEN true\n    ELSE false\n  END as actividad_reciente,\n  \n  -- Determinar acci√≥n sugerida\n  CASE \n    -- Nuevo ‚Üí Contactado (si hay evidencia de contacto)\n    WHEN l.estado = 'nuevo' AND l.fecha_primer_contacto IS NULL AND EXISTS (\n      SELECT 1 FROM interacciones_leads il \n      WHERE il.lead_id = l.id \n      AND il.tipo IN ('llamada', 'whatsapp', 'email')\n      AND il.direccion = 'saliente'\n    ) THEN 'marcar_contactado'\n    \n    -- Contactado ‚Üí Cotizado (si hay cotizaci√≥n registrada)\n    WHEN l.estado = 'contactado' AND l.fecha_cotizacion IS NULL AND l.monto_cotizacion IS NOT NULL AND l.monto_cotizacion > 0 \n    THEN 'marcar_cotizado'\n    \n    -- Cotizado ‚Üí Vendido (si hay indicadores de venta)\n    WHEN l.estado = 'cotizado' AND EXISTS (\n      SELECT 1 FROM interacciones_leads il \n      WHERE il.lead_id = l.id \n      AND il.notas ILIKE '%vendido%' OR il.notas ILIKE '%compra%' OR il.notas ILIKE '%cerrado%'\n    ) THEN 'marcar_vendido'\n    \n    -- Auto-perdido por tiempo (m√°s de 45 d√≠as sin actividad)\n    WHEN l.estado IN ('nuevo', 'contactado', 'cotizado') \n    AND EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - COALESCE(l.fecha_cotizacion, l.fecha_primer_contacto, l.fecha_creacion)))/86400 > 45\n    AND NOT EXISTS (\n      SELECT 1 FROM interacciones_leads il \n      WHERE il.lead_id = l.id \n      AND il.created_at > CURRENT_TIMESTAMP - INTERVAL '7 days'\n    ) THEN 'marcar_perdido_tiempo'\n    \n    ELSE 'sin_accion'\n  END as accion_sugerida\n  \nFROM leads l\nINNER JOIN usuarios asesor ON l.asesor_asignado_id = asesor.id\nINNER JOIN concesionarios c ON l.concesionario_id = c.id\nWHERE \n  l.estado IN ('nuevo', 'contactado', 'cotizado')  -- Solo estados activos\n  AND c.activo = true\n  AND asesor.activo = true\n  -- Evitar actualizaciones muy frecuentes del mismo lead\n  AND NOT EXISTS (\n    SELECT 1 FROM actualizaciones_estados_leads ael \n    WHERE ael.lead_id = l.id \n    AND ael.created_at > CURRENT_TIMESTAMP - INTERVAL '1 hour'\n  )\nHAVING accion_sugerida != 'sin_accion'\nORDER BY \n  l.score_calidad DESC,\n  l.fecha_creacion ASC;",
        "additionalFields": {}
      },
      "id": "query-leads-for-status-update",
      "name": "Consultar Leads para Actualizaci√≥n",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [470, 300]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.length }}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "id": "check-has-leads-to-update",
      "name": "¬øHay Leads para Actualizar?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [690, 300]
    },
    {
      "parameters": {
      },
      "id": "process-status-updates",
      "name": "Procesar Actualizaciones Estados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [910, 200]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Actualizar estado del lead y campos relacionados\nUPDATE leads \nSET \n  estado = $3,\n  fecha_primer_contacto = CASE WHEN $4::jsonb ? 'fecha_primer_contacto' THEN ($4::jsonb->>'fecha_primer_contacto')::timestamp ELSE fecha_primer_contacto END,\n  fecha_cotizacion = CASE WHEN $4::jsonb ? 'fecha_cotizacion' THEN ($4::jsonb->>'fecha_cotizacion')::timestamp ELSE fecha_cotizacion END,\n  fecha_cierre = CASE WHEN $4::jsonb ? 'fecha_cierre' THEN ($4::jsonb->>'fecha_cierre')::timestamp ELSE fecha_cierre END,\n  motivo_perdida = CASE WHEN $4::jsonb ? 'motivo_perdida' THEN ($4::jsonb->>'motivo_perdida') ELSE motivo_perdida END,\n  updated_at = CURRENT_TIMESTAMP\nWHERE \n  id = $1 \n  AND concesionario_id = $2\n  AND estado = $5  -- Verificar que el estado anterior coincida\nRETURNING \n  id,\n  estado,\n  fecha_primer_contacto,\n  fecha_cotizacion,\n  fecha_cierre,\n  updated_at;",
        "additionalFields": {
          "queryParameters": "=[\n  $json.lead_id,\n  $json.concesionario_id,\n  $json.estado_nuevo,\n  JSON.stringify($json.additional_data),\n  $json.estado_anterior\n]"
        }
      },
      "id": "update-lead-status",
      "name": "Actualizar Estado Lead",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [1130, 200]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Registrar la actualizaci√≥n de estado para auditor√≠a\nINSERT INTO actualizaciones_estados_leads (\n  lead_id,\n  concesionario_id,\n  asesor_id,\n  estado_anterior,\n  estado_nuevo,\n  accion_ejecutada,\n  razon_actualizacion,\n  actualizado_por,\n  datos_adicionales,\n  created_at\n) VALUES (\n  $1,\n  $2,\n  $3,\n  $4,\n  $5,\n  $6,\n  $7,\n  'sistema_automatico',\n  $8::jsonb,\n  CURRENT_TIMESTAMP\n) RETURNING *;",
        "additionalFields": {
          "queryParameters": "=[\n  $json.lead_id,\n  $json.concesionario_id,\n  $json.asesor_id,\n  $json.estado_anterior,\n  $json.estado_nuevo,\n  $json.accion_ejecutada,\n  $json.update_reason,\n  JSON.stringify({\n    update_timestamp: $json.update_timestamp,\n    update_priority: $json.update_priority,\n    horas_desde_creacion: $json.horas_desde_creacion,\n    actividad_reciente: $json.actividad_reciente\n  })\n]"
        }
      },
      "id": "log-status-update",
      "name": "Registrar Actualizaci√≥n",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [1350, 200]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.requires_notification }}",
              "operation": "equal",
              "value2": true
            }
          ]
        }
      },
      "id": "check-requires-notification",
      "name": "¬øRequiere Notificaci√≥n?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1570, 200]
    },
    {
      "parameters": {
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "emailSmtp",
        "fromEmail": "ventas@optimacx.com",
        "toEmail": "={{ $json.asesor_email }}",
        "ccEmail": "={{ $json.update_priority === 'high' ? 'jefe.ventas@optimacx.com' : '' }}",
        "subject": "üìä {{ $json.estado_nuevo === 'vendido' ? 'üéâ VENTA DETECTADA' : $json.estado_nuevo === 'cotizado' ? 'üí∞ COTIZACI√ìN DETECTADA' : $json.estado_nuevo === 'perdido' ? '‚ö†Ô∏è LEAD PERDIDO' : 'ACTUALIZACI√ìN LEAD' }} - {{ $json.cliente_nombre }}",
        "html": "=<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        .container { font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; }\n        .header { \n            background: {{ $json.estado_nuevo === 'vendido' ? '#28a745' : $json.estado_nuevo === 'cotizado' ? '#007bff' : $json.estado_nuevo === 'perdido' ? '#dc3545' : '#6c757d' }}; \n            color: white; \n            padding: 20px; \n            text-align: center; \n            border-radius: 8px 8px 0 0;\n        }\n        .status-change { background: #f8f9fa; padding: 15px; border-radius: 5px; margin: 15px 0; }\n        .lead-info { background: #e9ecef; padding: 15px; border-radius: 5px; margin: 15px 0; }\n        .success { color: #28a745; font-weight: bold; }\n        .warning { color: #ffc107; font-weight: bold; }\n        .danger { color: #dc3545; font-weight: bold; }\n        .info { color: #007bff; font-weight: bold; }\n        .cta { background: #17a2b8; color: white; padding: 15px; text-align: center; margin: 20px 0; border-radius: 5px; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h2>{{ $json.estado_nuevo === 'vendido' ? 'üéâ VENTA DETECTADA AUTOM√ÅTICAMENTE' : $json.estado_nuevo === 'cotizado' ? 'üí∞ COTIZACI√ìN DETECTADA' : $json.estado_nuevo === 'perdido' ? '‚ö†Ô∏è LEAD PERDIDO POR INACTIVIDAD' : 'üìä ACTUALIZACI√ìN AUTOM√ÅTICA DE ESTADO' }}</h2>\n            <p><strong>{{ $json.concesionario_nombre }}</strong></p>\n        </div>\n        \n        <div style=\"padding: 20px;\">\n            <p>Hola <strong>{{ $json.asesor_nombre }}</strong>,</p>\n            \n            <div class=\"status-change\">\n                <h3>üîÑ Cambio de Estado Detectado</h3>\n                <p><strong>Lead:</strong> {{ $json.cliente_nombre }} ({{ $json.telefono_cliente }})</p>\n                <p><strong>Estado anterior:</strong> <span class=\"info\">{{ $json.estado_anterior.toUpperCase() }}</span></p>\n                <p><strong>Estado nuevo:</strong> <span class=\"{{ $json.estado_nuevo === 'vendido' ? 'success' : $json.estado_nuevo === 'cotizado' ? 'info' : $json.estado_nuevo === 'perdido' ? 'danger' : 'info' }}\">{{ $json.estado_nuevo.toUpperCase() }}</span></p>\n                <p><strong>Acci√≥n ejecutada:</strong> {{ $json.accion_ejecutada.replace('_', ' ').toUpperCase() }}</p>\n            </div>\n            \n            <div class=\"lead-info\">\n                <h3>üìã Informaci√≥n del Lead</h3>\n                <ul>\n                    <li><strong>Modelo de inter√©s:</strong> {{ $json.modelo_interes || 'No especificado' }}</li>\n                    <li><strong>Score de calidad:</strong> {{ $json.score_calidad }}/100</li>\n                    <li><strong>Horas desde creaci√≥n:</strong> {{ $json.horas_desde_creacion }}h</li>\n                    <li><strong>Actividad reciente:</strong> {{ $json.actividad_reciente ? 'S√≠' : 'No' }}</li>\n                </ul>\n            </div>\n            \n            <div style=\"background: #fff3cd; padding: 15px; border-radius: 5px; margin: 15px 0;\">\n                <h4>ü§ñ Raz√≥n de la Actualizaci√≥n Autom√°tica:</h4>\n                <p>{{ $json.update_reason }}</p>\n            </div>\n            \n            {{ $json.estado_nuevo === 'vendido' ? `\n            <div class=\"cta\">\n                <strong>üéâ ¬°FELICITACIONES POR LA VENTA!</strong><br>\n                El sistema detect√≥ indicadores de venta exitosa. Verifica que toda la informaci√≥n est√© correcta.\n            </div>\n            ` : $json.estado_nuevo === 'cotizado' ? `\n            <div class=\"cta\">\n                <strong>üí∞ COTIZACI√ìN DETECTADA</strong><br>\n                Aseg√∫rate de hacer seguimiento activo para convertir esta cotizaci√≥n en venta.\n            </div>\n            ` : $json.estado_nuevo === 'perdido' ? `\n            <div class=\"cta\">\n                <strong>‚ö†Ô∏è LEAD PERDIDO POR INACTIVIDAD</strong><br>\n                Este lead se marc√≥ como perdido autom√°ticamente. Si a√∫n es viable, puedes reactivarlo manualmente.\n            </div>\n            ` : '' }}\n            \n            <div style=\"background: #e9ecef; padding: 15px; border-radius: 5px; margin: 20px 0;\">\n                <h4>üìã Pr√≥ximos Pasos:</h4>\n                <ol>\n                    {{ $json.estado_nuevo === 'vendido' ? '<li><strong>Verificar informaci√≥n de venta</strong> - Confirmar detalles</li><li><strong>Procesar documentaci√≥n</strong> - Completar tr√°mites</li><li><strong>Coordinar entrega</strong> - Agendar con cliente</li>' : '' }}\n                    {{ $json.estado_nuevo === 'cotizado' ? '<li><strong>Hacer seguimiento inmediato</strong> - Contactar cliente</li><li><strong>Negociar condiciones</strong> - Revisar propuesta</li><li><strong>Cerrar la venta</strong> - Impulsar decisi√≥n</li>' : '' }}\n                    {{ $json.estado_nuevo === 'perdido' ? '<li><strong>Revisar causas</strong> - Analizar por qu√© se perdi√≥</li><li><strong>Aprender para futuros casos</strong> - Mejorar proceso</li><li><strong>Reactivar si es posible</strong> - √öltimo intento de contacto</li>' : '' }}\n                    <li><strong>Actualizar sistema</strong> - Verificar que la informaci√≥n sea correcta</li>\n                </ol>\n            </div>\n            \n            <p>üíª <strong>Ver lead completo:</strong> <a href=\"https:
      },
      "id": "send-status-notification",
      "name": "Enviar Notificaci√≥n Estado",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [1790, 120]
    },
    {
      "parameters": {
      },
      "id": "generate-update-summary",
      "name": "Generar Resumen Actualizaciones",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2010, 200]
    },
    {
      "parameters": {
      },
      "id": "process-manual-update",
      "name": "Procesar Actualizaci√≥n Manual",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [470, 450]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Actualizar lead con datos manuales\nUPDATE leads \nSET \n  estado = $2,\n  fecha_primer_contacto = CASE WHEN $3::jsonb ? 'fecha_primer_contacto' THEN ($3::jsonb->>'fecha_primer_contacto')::timestamp ELSE fecha_primer_contacto END,\n  fecha_cotizacion = CASE WHEN $3::jsonb ? 'fecha_cotizacion' THEN ($3::jsonb->>'fecha_cotizacion')::timestamp ELSE fecha_cotizacion END,\n  fecha_cierre = CASE WHEN $3::jsonb ? 'fecha_cierre' THEN ($3::jsonb->>'fecha_cierre')::timestamp ELSE fecha_cierre END,\n  monto_cotizacion = CASE WHEN $3::jsonb ? 'monto_cotizacion' THEN ($3::jsonb->>'monto_cotizacion')::numeric ELSE monto_cotizacion END,\n  monto_venta = CASE WHEN $3::jsonb ? 'monto_venta' THEN ($3::jsonb->>'monto_venta')::numeric ELSE monto_venta END,\n  motivo_perdida = CASE WHEN $3::jsonb ? 'motivo_perdida' THEN ($3::jsonb->>'motivo_perdida') ELSE motivo_perdida END,\n  updated_at = CURRENT_TIMESTAMP,\n  updated_by = $4\nWHERE \n  id = $1\nRETURNING *;",
        "additionalFields": {
          "queryParameters": "=[\n  $json.lead_id,\n  $json.new_status,\n  JSON.stringify($json.additional_data),\n  $json.user_id\n]"
        }
      },
      "id": "execute-manual-update",
      "name": "Ejecutar Actualizaci√≥n Manual",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [690, 450]
    },
    {
      "parameters": {
        "respondWithOptions": "responseData",
        "responseData": "={\n  \"success\": true,\n  \"message\": \"Estado de lead actualizado exitosamente\",\n  \"lead_id\": {{ $('Procesar Actualizaci√≥n Manual').first().json.lead_id }},\n  \"previous_status\": \"{{ $('Ejecutar Actualizaci√≥n Manual').first().json.estado }}\",\n  \"new_status\": \"{{ $('Procesar Actualizaci√≥n Manual').first().json.new_status }}\",\n  \"updated_by\": \"{{ $('Procesar Actualizaci√≥n Manual').first().json.user_name }}\",\n  \"update_reason\": \"{{ $('Procesar Actualizaci√≥n Manual').first().json.update_reason }}\",\n  \"timestamp\": \"{{ $('Procesar Actualizaci√≥n Manual').first().json.update_timestamp }}\",\n  \"is_manual_update\": true\n}"
      },
      "id": "respond-manual-update",
      "name": "Respuesta Actualizaci√≥n Manual",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [910, 450]
    },
    {
      "parameters": {
      },
      "id": "no-updates-response",
      "name": "Sin Actualizaciones Pendientes",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [910, 350]
    }
  ],
  "connections": {
    "Ejecutar cada 15 minutos": {
      "main": [["Consultar Leads para Actualizaci√≥n", "type": "main", "index": 0]]
    },
    "Webhook Actualizaci√≥n Manual": {
      "main": [["Procesar Actualizaci√≥n Manual", "type": "main", "index": 0]]
    },
    "Consultar Leads para Actualizaci√≥n": {
      "main": [["¬øHay Leads para Actualizar?", "type": "main", "index": 0]]
    },
    "¬øHay Leads para Actualizar?": {
      "main": [
        [{"node": "Procesar Actualizaciones Estados", "type": "main", "index": 0}],
        [{"node": "Sin Actualizaciones Pendientes", "type": "main", "index": 0}]
      ]
    },
    "Procesar Actualizaciones Estados": {
      "main": [["Actualizar Estado Lead", "type": "main", "index": 0]]
    },
    "Actualizar Estado Lead": {
      "main": [["Registrar Actualizaci√≥n", "type": "main", "index": 0]]
    },
    "Registrar Actualizaci√≥n": {
      "main": [["¬øRequiere Notificaci√≥n?", "type": "main", "index": 0]]
    },
    "¬øRequiere Notificaci√≥n?": {
      "main": [
        [{"node": "Enviar Notificaci√≥n Estado", "type": "main", "index": 0}],
        [{"node": "Generar Resumen Actualizaciones", "type": "main", "index": 0}]
      ]
    },
    "Enviar Notificaci√≥n Estado": {
      "main": [["Generar Resumen Actualizaciones", "type": "main", "index": 0]]
    },
    "Procesar Actualizaci√≥n Manual": {
      "main": [["Ejecutar Actualizaci√≥n Manual", "type": "main", "index": 0]]
    },
    "Ejecutar Actualizaci√≥n Manual": {
      "main": [["Respuesta Actualizaci√≥n Manual", "type": "main", "index": 0]]
    }
  },
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "manejador-errores"
  },
  "staticData": {},
  "variables": {
    "UPDATE_VERSION": "1.0.0",
    "MANUAL_WEBHOOK_PATH": "/webhook/update-lead-status",
    "AUTO_UPDATE_INTERVAL_MINUTES": 15,
    "AUTO_LOST_AFTER_DAYS": 45,
    "VALID_STATES": ["nuevo", "contactado", "cotizado", "vendido", "perdido"],
    "HIGH_PRIORITY_STATES": ["cotizado", "vendido"],
    "NOTIFICATION_STATES": ["cotizado", "vendido", "perdido"]
  }
}