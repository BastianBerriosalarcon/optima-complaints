{
  "meta": {
    "instanceId": "calc-nps-001"
  },
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "trigger-schedule",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  c.id as concesionario_id,\n  c.nombre as concesionario_nombre,\n  -- Encuestas Post-venta\n  COUNT(DISTINCT ep.id) as total_encuestas_postventa,\n  AVG(CASE \n    WHEN ep.calificacion_general >= 9 THEN 1 \n    WHEN ep.calificacion_general <= 6 THEN -1 \n    ELSE 0 \n  END) * 100 as nps_postventa,\n  \n  -- Encuestas Ventas\n  COUNT(DISTINCT ev.id) as total_encuestas_ventas,\n  AVG(CASE \n    WHEN ev.satisfaccion_general >= 9 THEN 1 \n    WHEN ev.satisfaccion_general <= 6 THEN -1 \n    ELSE 0 \n  END) * 100 as nps_ventas,\n  \n  -- NPS Consolidado\n  AVG(CASE \n    WHEN COALESCE(ep.calificacion_general, ev.satisfaccion_general) >= 9 THEN 1 \n    WHEN COALESCE(ep.calificacion_general, ev.satisfaccion_general) <= 6 THEN -1 \n    ELSE 0 \n  END) * 100 as nps_consolidado\n  \nFROM concesionarios c\nLEFT JOIN encuestas_postventa ep ON c.id = ep.concesionario_id \n  AND ep.fecha_respuesta >= NOW() - INTERVAL '24 hours'\nLEFT JOIN encuestas_ventas ev ON c.id = ev.concesionario_id \n  AND ev.fecha_respuesta >= NOW() - INTERVAL '24 hours'\nGROUP BY c.id, c.nombre\nHAVING COUNT(DISTINCT ep.id) > 0 OR COUNT(DISTINCT ev.id) > 0\nORDER BY nps_consolidado DESC;",
        "options": {}
      },
      "id": "query-nps-data",
      "name": "Consultar Datos NPS",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [460, 300],
      "credentials": {
        "postgres": {
          "id": "supabase-main",
          "name": "Supabase Main DB"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Calcular NPS y procesar mÃ©tricas\nconst items = $input.all();\nconst results = [];\nconst alertas = [];\n\nfor (const item of items) {\n  const data = item.json;\n  \n  // CÃ¡lculo de NPS final\n  const nps = {\n    concesionario_id: data.concesionario_id,\n    concesionario_nombre: data.concesionario_nombre,\n    fecha_calculo: new Date().toISOString(),\n    periodo: '24h',\n    \n    // MÃ©tricas por tipo\n    nps_postventa: Math.round(data.nps_postventa || 0),\n    nps_ventas: Math.round(data.nps_ventas || 0),\n    nps_consolidado: Math.round(data.nps_consolidado || 0),\n    \n    // Totales\n    total_encuestas_postventa: data.total_encuestas_postventa || 0,\n    total_encuestas_ventas: data.total_encuestas_ventas || 0,\n    total_encuestas: (data.total_encuestas_postventa || 0) + (data.total_encuestas_ventas || 0),\n    \n    // ClasificaciÃ³n NPS\n    categoria_nps: data.nps_consolidado >= 50 ? 'Excelente' : \n                   data.nps_consolidado >= 0 ? 'Bueno' : \n                   data.nps_consolidado >= -50 ? 'Mejorable' : 'CrÃ­tico'\n  };\n  \n  results.push({ json: nps });\n  \n  // Generar alertas para NPS crÃ­ticos\n  if (nps.nps_consolidado < -50 && nps.total_encuestas >= 5) {\n    alertas.push({\n      json: {\n        tipo: 'nps_critico',\n        concesionario: nps.concesionario_nombre,\n        nps_value: nps.nps_consolidado,\n        total_encuestas: nps.total_encuestas,\n        fecha: nps.fecha_calculo\n      }\n    });\n  }\n}\n\n// Almacenar alertas en contexto para envÃ­o posterior\nif (alertas.length > 0) {\n  $execution.set('alertas_nps', alertas);\n}\n\nreturn results;"
      },
      "id": "calculate-nps",
      "name": "Calcular NPS",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "operation": "upsert",
        "table": "metricas_nps",
        "updateKey": "concesionario_id,periodo",
        "columnsUi": {
          "columnToMatchOn": [
            {
              "column": "concesionario_id",
              "operator": "="
            },
            {
              "column": "periodo", 
              "operator": "="
            }
          ],
          "columnsToUpdate": [
            {
              "column": "nps_postventa"
            },
            {
              "column": "nps_ventas"
            },
            {
              "column": "nps_consolidado"
            },
            {
              "column": "total_encuestas_postventa"
            },
            {
              "column": "total_encuestas_ventas"
            },
            {
              "column": "total_encuestas"
            },
            {
              "column": "categoria_nps"
            },
            {
              "column": "fecha_calculo"
            }
          ]
        }
      },
      "id": "upsert-nps",
      "name": "Guardar MÃ©tricas NPS",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [900, 300],
      "credentials": {
        "postgres": {
          "id": "supabase-main",
          "name": "Supabase Main DB"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "alertas-exist",
              "leftValue": "={{ $execution.get('alertas_nps') }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-alerts",
      "name": "Â¿Hay Alertas?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "sendTo": "gerencia@optimacx.com,calidad@optimacx.com",
        "subject": "ðŸš¨ Alerta NPS CrÃ­tico - {{ new Date().toLocaleDateString() }}",
        "message": "=Se han detectado concesionarios con NPS crÃ­tico (< -50):\n\n{{ $execution.get('alertas_nps').map(item => `â€¢ ${item.json.concesionario}: ${item.json.nps_value}% (${item.json.total_encuestas} encuestas)`).join('\\n') }}\n\nRevisiÃ³n requerida en el dashboard de mÃ©tricas.\n\nSaludos,\nSistema OptimaCX",
        "options": {
          "allowUnauthorizedCerts": false,
          "ccEmail": "",
          "bccEmail": ""
        }
      },
      "id": "send-alert-email",
      "name": "Enviar Alerta Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [1340, 200],
      "credentials": {
        "smtp": {
          "id": "smtp-optimacx",
          "name": "SMTP OptimaCX"
        }
      }
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Consultar Datos NPS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consultar Datos NPS": {
      "main": [
        [
          {
            "node": "Calcular NPS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calcular NPS": {
      "main": [
        [
          {
            "node": "Guardar MÃ©tricas NPS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guardar MÃ©tricas NPS": {
      "main": [
        [
          {
            "node": "Â¿Hay Alertas?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Â¿Hay Alertas?": {
      "main": [
        [
          {
            "node": "Enviar Alerta Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-08-09T05:47:00.000Z",
  "versionId": "nps-calc-v2.1",
  "name": "Calculador NPS AutomÃ¡tico",
  "active": true,
  "id": "calc-nps-auto",
  "hash": "nps-metrics-calculator"
}