{
  "name": "Sales Survey Submission Webhook",
  "description": "Webhook específico para recibir encuestas de VENTAS completadas. Principio SRP: Una sola responsabilidad - recibir y procesar encuestas de ventas.",
  "tags": ["sales", "survey", "webhook", "entrypoint", "ventas", "srp"],
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/sales-survey/submit",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-sales-survey-submit",
      "name": "Webhook Envío Encuestas Ventas",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "sales-survey-submit"
    },
    {
      "parameters": {
        "jsCode": "// SALES SURVEY SUBMISSION WEBHOOK - SRP: Solo recepción y validación VENTAS\n// Principio SRP: Una sola responsabilidad - validar y preparar datos de encuesta de ventas\n\nconst surveySubmission = $input.first().json;\n\n// Validar entrada específica para VENTAS\nif (!surveySubmission || typeof surveySubmission !== 'object') {\n  throw new Error('Datos de encuesta VENTAS inválidos');\n}\n\n// Campos requeridos específicos para encuestas de VENTAS\nconst requiredSalesFields = [\n  'cliente_telefono',\n  'vehiculo_modelo', \n  'fecha_venta',\n  'recomendacion',\n  'atencion_asesor',\n  'proceso_entrega',\n  'satisfaccion_general'\n];\n\nconst missingSalesFields = requiredSalesFields.filter(field => \n  !surveySubmission.hasOwnProperty(field) || \n  surveySubmission[field] === null || \n  surveySubmission[field] === undefined\n);\n\nif (missingSalesFields.length > 0) {\n  throw new Error(`Campos requeridos de VENTAS faltantes: ${missingSalesFields.join(', ')}`);\n}\n\n// Validar puntuaciones de VENTAS (1-10)\nconst salesScoreFields = ['recomendacion', 'atencion_asesor', 'proceso_entrega', 'satisfaccion_general'];\nconst invalidSalesScores = salesScoreFields.filter(field => {\n  const score = parseInt(surveySubmission[field]);\n  return isNaN(score) || score < 1 || score > 10;\n});\n\nif (invalidSalesScores.length > 0) {\n  throw new Error(`Puntuaciones de VENTAS inválidas (deben ser 1-10): ${invalidSalesScores.join(', ')}`);\n}\n\n// Preparar datos específicos para manejador de respuestas VENTAS\nconst salesSurveyData = {\n  // Identificación específica de VENTAS\n  survey_type: 'VENTAS',\n  department: 'VENTAS',\n  \n  // Datos del cliente de VENTAS\n  cliente_telefono: surveySubmission.cliente_telefono,\n  cliente_nombre: surveySubmission.cliente_nombre || 'Cliente',\n  cliente_email: surveySubmission.cliente_email || null,\n  \n  // Datos específicos de la VENTA\n  vehiculo_modelo: surveySubmission.vehiculo_modelo,\n  fecha_venta: surveySubmission.fecha_venta,\n  asesor_ventas_id: surveySubmission.asesor_ventas_id || null,\n  asesor_ventas_nombre: surveySubmission.asesor_ventas_nombre || 'Equipo de Ventas',\n  sucursal: surveySubmission.sucursal || 'Principal',\n  \n  // Puntuaciones específicas de VENTAS (diferentes a post-servicio)\n  recomendacion: parseInt(surveySubmission.recomendacion),\n  atencion_asesor: parseInt(surveySubmission.atencion_asesor),\n  proceso_entrega: parseInt(surveySubmission.proceso_entrega),\n  satisfaccion_general: parseInt(surveySubmission.satisfaccion_general),\n  \n  // Comentario opcional\n  comentario: surveySubmission.comentario || null,\n  \n  // Metadatos de envío específicos VENTAS\n  origen: surveySubmission.origen || 'QR_VENTAS',\n  concesionario_id: surveySubmission.concesionario_id || surveySubmission.tenant_id,\n  fecha_respuesta: new Date().toISOString(),\n  \n  // Calcular promedio específico de VENTAS\n  promedio_ventas: Math.round(\n    (parseInt(surveySubmission.recomendacion) +\n     parseInt(surveySubmission.atencion_asesor) +\n     parseInt(surveySubmission.proceso_entrega) +\n     parseInt(surveySubmission.satisfaccion_general)) / 4 * 100\n  ) / 100\n};\n\n// Determinar si requiere alerta (notas bajas en VENTAS)\nconst requiresAlert = salesSurveyData.recomendacion <= 8 || \n                    salesSurveyData.atencion_asesor <= 8 ||\n                    salesSurveyData.proceso_entrega <= 8 ||\n                    salesSurveyData.satisfaccion_general <= 8;\n\nsalesSurveyData.requires_alert = requiresAlert;\nsalesSurveyData.alert_reason = requiresAlert ? \n  'Puntuación baja en encuesta de VENTAS (≤8)' : null;\n\nconsole.log('Encuesta VENTAS recibida:', {\n  cliente: salesSurveyData.cliente_nombre,\n  vehiculo: salesSurveyData.vehiculo_modelo,\n  promedio: salesSurveyData.promedio_ventas,\n  requiereAlerta: requiresAlert,\n  origen: salesSurveyData.origen\n});\n\nreturn salesSurveyData;"
      },
      "id": "validate-sales-survey",
      "name": "Validar Encuesta Ventas",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $vars.N8N_WEBHOOK_URL }}/webhook/sales-survey/response-handler",
        "headers": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $vars.N8N_WEBHOOK_AUTH_TOKEN }}"
            }
          ]
        },
        "body": {
          "parameters": [
            {
              "name": "survey_data",
              "value": "={{ JSON.stringify($json) }}"
            },
            {
              "name": "survey_type",
              "value": "VENTAS"
            },
            {
              "name": "department",
              "value": "VENTAS"
            },
            {
              "name": "webhook_timestamp",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        }
      },
      "id": "trigger-sales-response-handler",
      "name": "Disparar Manejador Respuestas Ventas",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [680, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"success\",\n  \"message\": \"Encuesta de VENTAS recibida y procesada exitosamente.\",\n  \"survey_type\": \"VENTAS\",\n  \"department\": \"VENTAS\",\n  \"client_info\": {\n    \"cliente_nombre\": \"{{ $('Validar Encuesta Ventas').first().json.cliente_nombre }}\",\n    \"vehiculo_modelo\": \"{{ $('Validar Encuesta Ventas').first().json.vehiculo_modelo }}\",\n    \"promedio_ventas\": {{ $('Validar Encuesta Ventas').first().json.promedio_ventas }}\n  },\n  \"processing_info\": {\n    \"requires_alert\": {{ $('Validar Encuesta Ventas').first().json.requires_alert }},\n    \"alert_reason\": \"{{ $('Validar Encuesta Ventas').first().json.alert_reason }}\",\n    \"origen\": \"{{ $('Validar Encuesta Ventas').first().json.origen }}\"\n  },\n  \"next_steps\": \"{{ $('Validar Encuesta Ventas').first().json.requires_alert ? 'Alerta enviada al equipo de ventas' : 'Encuesta registrada normalmente' }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "success-response-ventas",
      "name": "Respuesta Exitosa Ventas",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "validation-error",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-validation-error",
      "name": "¿Error de Validación?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 500]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"error\",\n  \"message\": \"Error al procesar encuesta de VENTAS.\",\n  \"survey_type\": \"VENTAS\",\n  \"department\": \"VENTAS\",\n  \"error_details\": {\n    \"error_message\": \"{{ $json.error?.message || 'Error de validación desconocido' }}\",\n    \"validation_failed\": true,\n    \"required_fields\": [\"cliente_telefono\", \"vehiculo_modelo\", \"fecha_venta\", \"recomendacion\", \"atencion_asesor\", \"proceso_entrega\", \"satisfaccion_general\"],\n    \"score_range\": \"Las puntuaciones deben estar entre 1 y 10\"\n  },\n  \"recommendations\": {\n    \"check_required_fields\": \"Verifique que todos los campos requeridos estén presentes\",\n    \"validate_scores\": \"Asegúrese de que las puntuaciones estén entre 1 y 10\",\n    \"contact_support\": \"Si el problema persiste, contacte al equipo técnico\"\n  },\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "error-response-ventas",
      "name": "Respuesta Error Ventas",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 500]
    }
  ],
  "connections": {
    "Webhook Envío Encuestas Ventas": {
      "main": [
        [
          {
            "node": "Validar Encuesta Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar Encuesta Ventas": {
      "main": [
        [
          {
            "node": "Disparar Manejador Respuestas Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "error": [
        [
          {
            "node": "¿Error de Validación?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Disparar Manejador Respuestas Ventas": {
      "main": [
        [
          {
            "node": "Respuesta Exitosa Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "¿Error de Validación?": {
      "main": [
        [
          {
            "node": "Respuesta Error Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "srp",
      "name": "srp"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "sales",
      "name": "sales"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "ventas",
      "name": "ventas"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "webhook",
      "name": "webhook"
    }
  ],
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "sales-survey-submission-webhook",
  "versionId": "1.0.0"
}