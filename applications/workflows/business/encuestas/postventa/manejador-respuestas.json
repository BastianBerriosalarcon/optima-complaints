{
  "name": "Survey - Response Handler",
  "description": "Maneja respuestas de encuestas: valida, registra en Supabase y notifica si la puntuación es baja (SRP).",
  "tags": ["survey", "response", "handler", "srp"],
  "nodes": [
    {
      "parameters": { "workflowId": "={{ $json.workflowId || 'upstream' }}" },
      "id": "workflow-trigger",
      "name": "Trigger del Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 2.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Normalizar y validar respuesta\nconst input = $input.first()?.json || {};\nconst concesionario_id = input.concesionario_id || input.tenant_id || null;\nconst recomendacion = Number(input.recomendacion || 0);\nconst satisfaccion = Number(input.satisfaccion || 0);\nconst lavado = Number(input.lavado || 0);\nconst average_score = Number(input.average_score ?? ((recomendacion + satisfaccion + lavado) / 3));\nconst requires_notification = average_score <= 8;\nreturn [{ json: { ...input, concesionario_id, recomendacion, satisfaccion, lavado, average_score, requires_notification } }];"
      },
      "id": "validate-survey-response",
      "name": "Validar Respuesta Encuesta",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $vars.SUPABASE_URL }}/rest/v1/encuestas",
        "sendHeaders": true,
        "headerParameters": { "parameters": [
          { "name": "apikey", "value": "={{ $vars.SUPABASE_ANON_KEY }}" },
          { "name": "Authorization", "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}" },
          { "name": "Content-Type", "value": "application/json" },
          { "name": "Prefer", "value": "return=representation" }
        ]},
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={{ JSON.stringify({ concesionario_id: $json.concesionario_id, sucursal_id: $json.sucursal_id, cliente_nombre: $json.cliente_nombre, cliente_rut: $json.cliente_rut, cliente_telefono: $json.cliente_telefono, recomendacion: $json.recomendacion, satisfaccion: $json.satisfaccion, lavado: $json.lavado, asesor: $json.asesor, comentario: $json.comentario, origen: $json.origen || 'WhatsApp', estado: $json.estado || 'completado', average_score: $json.average_score, fecha_completado: new Date().toISOString() }) }}"
      },
      "id": "insert-survey-response",
      "name": "Registrar Encuesta",
      "type": "n8n-nodes-base.httpRequestV3",
      "typeVersion": 4.2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": { "caseSensitive": true, "leftValue": "", "typeValidation": "strict" },
          "conditions": [
            { "leftValue": "={{ $('Validar Respuesta Encuesta').first().json.requires_notification }}", "rightValue": true, "operator": { "type": "boolean", "operation": "equal" } }
          ],
          "combineOperation": "all"
        }
      },
      "id": "check-notification-required",
      "name": "¿Requiere Notificación?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// Preparar email de alerta por baja puntuación\nconst d = $json;\nconst subject = `Alerta: Encuesta con baja puntuación (${d.average_score})`;\nconst html = `<p>Cliente: ${d.cliente_nombre || ''} (${d.cliente_telefono || ''})</p><p>Comentario: ${d.comentario||''}</p>`;\nreturn [{ json: { ...d, subject, html } }];"
      },
      "id": "prepare-notification-data",
      "name": "Preparar Datos Notificación",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "operation": "create",
        "resource": "execution",
        "workflowId": "survey-low-score-notifier",
        "data": "={{ JSON.stringify($json) }}"
      },
      "id": "trigger-low-score-notification",
      "name": "Disparar Notificación Baja Calificación",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 2.1,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"success\",\n  \"message\": \"Encuesta registrada correctamente\",\n  \"average_score\": {{ $json.average_score }},\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "generate-success-response",
      "name": "Generar Respuesta Éxito",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2.1,
      "position": [1340, 400]
    }
  ],
  "connections": {
    "Trigger del Workflow": { "main": [[{ "node": "Validar Respuesta Encuesta", "type": "main", "index": 0 }]] },
    "Validar Respuesta Encuesta": { "main": [[{ "node": "Registrar Encuesta", "type": "main", "index": 0 }]] },
    "Registrar Encuesta": { "main": [[{ "node": "¿Requiere Notificación?", "type": "main", "index": 0 }]] },
    "¿Requiere Notificación?": { "main": [[{ "node": "Preparar Datos Notificación", "type": "main", "index": 0 }], [{ "node": "Generar Respuesta Éxito", "type": "main", "index": 0 }]] },
    "Preparar Datos Notificación": { "main": [[{ "node": "Disparar Notificación Baja Calificación", "type": "main", "index": 0 }]] },
    "Disparar Notificación Baja Calificación": { "main": [[{ "node": "Generar Respuesta Éxito", "type": "main", "index": 0 }]] }
  },
  "settings": { "saveExecutionProgress": true, "saveManualExecutions": true, "callerPolicy": "workflowsFromSameOwner" }
}