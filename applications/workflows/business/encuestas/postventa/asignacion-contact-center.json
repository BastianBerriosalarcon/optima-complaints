{
  "name": "Survey Call Center Assignment",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/survey/call-center-assignment",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Call Center Assignment Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [240, 300],
      "webhookId": "survey-call-center-assignment"
    },
    {
      "parameters": {
        "requestMethod": "GET",
        "url": "={{ $vars.SUPABASE_URL }}/rest/v1/usuarios",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "apikey", "value": "={{ $vars.SUPABASE_ANON_KEY }}" },
            { "name": "Authorization", "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}" }
          ]
        },
        "qs": {
          "parameters": [
            { "name": "concesionario_id", "value": "eq.{{ $json.tenant_id }}" },
            { "name": "rol", "value": "eq.Contact Center" },
            { "name": "activo", "value": "eq.true" },
            { "name": "select", "value": "id,nombre,email,telefono,sucursal_id" }
          ]
        }
      },
      "id": "get-call-center-agents",
      "name": "Get Call Center Agents",
      "type": "n8n-nodes-base.httpRequestV3",
      "typeVersion": 4.2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "/*** SURVEY CALL CENTER ASSIGNMENT - SRP: Asignaci贸n equitativa por round-robin ***/\nconst input = $input.first()?.json || {};\nconst agents = $('Get Call Center Agents').first().json || [];\nconst clients = Array.isArray(input.clients_for_call_center) ? input.clients_for_call_center : [];\nconst tenant_id = input.tenant_id || input.concesionario_id || null;\nconst list = agents.map(a => ({ agent_info: a, assigned_clients: [] }));\nclients.forEach((c,i)=>{ if (list.length) list[i % list.length].assigned_clients.push(c); });\nconst totalAssignments = clients.length;\nconst totalAgents = list.length;\nreturn [{ json: { tenant_id, assignments_by_agent: list, total_assignments: totalAssignments, total_agents: totalAgents } }];"
      },
      "id": "assign-clients",
      "name": "Assign Clients",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [680, 300]
    },
    {
      "parameters": { "fieldToSplitOut": "assignments_by_agent", "options": {} },
      "id": "split-by-agent",
      "name": "Split By Agent",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [900, 300]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $vars.SUPABASE_URL }}/rest/v1/survey_call_assignments",
        "sendHeaders": true,
        "headerParameters": { "parameters": [
          { "name": "apikey", "value": "={{ $vars.SUPABASE_ANON_KEY }}" },
          { "name": "Authorization", "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}" },
          { "name": "Content-Type", "value": "application/json" },
          { "name": "Prefer", "value": "return=representation" }
        ]},
        "sendBody": true,
        "bodyContentType": "json",
  "jsonBody": "={{ JSON.stringify({ concesionario_id: $('Assign Clients').first().json.tenant_id, agente_id: $json.agent_info?.id, agente_nombre: $json.agent_info?.nombre, assigned_clients: $json.assigned_clients, total_clients: ($json.assigned_clients || []).length, estado: 'pendiente', fecha_asignacion: new Date().toISOString(), prioridad_alta_count: ($json.assigned_clients || []).filter(c => c.prioridad === 'alta').length }) }}"
      },
      "id": "register-assignments",
      "name": "Register Assignments",
      "type": "n8n-nodes-base.httpRequestV3",
      "typeVersion": 4.2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "jsCode": "// Preparar email para cada agente\nconst agent = $json.agent_info || {};\nconst count = ($json.assigned_clients || []).length;\nconst to = agent.email || '';// definir email\nconst subject = `Asignaci贸n de ${count} clientes para encuestas`;\nconst html = `<p>Hola ${agent.nombre || ''},</p><p>Se te han asignado ${count} clientes para contacto telef贸nico de encuestas.</p>`;\nreturn [{ json: { to, subject, html, assigned_count: count } }];"
      },
      "id": "prepare-notification",
      "name": "Prepare Notification",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $vars.N8N_WEBHOOK_URL }}/webhook/send-email",
        "sendHeaders": true,
        "headerParameters": { "parameters": [
          { "name": "Content-Type", "value": "application/json" },
          { "name": "Authorization", "value": "Bearer {{ $vars.N8N_WEBHOOK_AUTH_TOKEN }}" }
        ]},
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={{ JSON.stringify({ to: $json.to, subject: $json.subject, html: $json.html, tenant_id: $('Assign Clients').first().json.tenant_id }) }}"
      },
      "id": "send-notification",
      "name": "Send Notification",
      "type": "n8n-nodes-base.httpRequestV3",
      "typeVersion": 4.2,
      "position": [1560, 300]
    },
    {
      "parameters": {
        "jsCode": "// Reporte final por agente\nreturn [{ json: { report_generated: true, time: new Date().toISOString() } }];"
      },
      "id": "generate-report",
      "name": "Generate Final Report",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1780, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"success\",\n  \"message\": \"Asignaci贸n a Contact Center completada exitosamente\",\n  \"assignment_data\": {\n    \"total_clients_assigned\": {{ $('Assign Clients').first().json.total_assignments }},\n    \"total_agents\": {{ $('Assign Clients').first().json.total_agents }}\n  },\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2.1,
      "position": [2000, 300]
    }
  ],
  "connections": {
    "Call Center Assignment Trigger": { "main": [[{ "node": "Get Call Center Agents", "type": "main", "index": 0 }]] },
    "Get Call Center Agents": { "main": [[{ "node": "Assign Clients", "type": "main", "index": 0 }]] },
    "Assign Clients": { "main": [[{ "node": "Split By Agent", "type": "main", "index": 0 }]] },
    "Split By Agent": { "main": [[{ "node": "Register Assignments", "type": "main", "index": 0 }]] },
    "Register Assignments": { "main": [[{ "node": "Prepare Notification", "type": "main", "index": 0 }]] },
    "Prepare Notification": { "main": [[{ "node": "Send Notification", "type": "main", "index": 0 }]] },
    "Send Notification": { "main": [[{ "node": "Generate Final Report", "type": "main", "index": 0 }]] },
    "Generate Final Report": { "main": [[{ "node": "Success Response", "type": "main", "index": 0 }]] }
  },
  "pinData": {},
  "settings": { "executionOrder": "v1" },
  "staticData": null,
  "tags": ["srp", "survey", "assignment"],
  "meta": { "templateCredsSetupCompleted": true },
  "id": "survey-call-center-assignment",
  "versionId": "1.0.1"
}