{
  "name": "Survey WhatsApp Sender",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/survey/whatsapp-sender",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "WhatsApp Sender Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "survey-whatsapp-sender"
    },
    {
      "parameters": {
        "batchSize": 10,
        "options": {}
      },
      "id": "batch-clients",
      "name": "Batch Clients",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "/*** SURVEY WHATSAPP SENDER - SRP: Solo envío masivo de encuestas ***/\nconst campaignData = $('WhatsApp Sender Trigger').first().json;\nconst currentBatch = $input.first().json;\nconst tenantConfig = campaignData.tenant_config;\n\n// Template personalizable por concesionario (siguiendo patrón tenant config)\nconst messageTemplate = tenantConfig.survey_whatsapp_template || `\n¡Hola {{nombre}}! 👋\n\nEsperamos que esté muy bien. Somos de *{{concesionario}}* y queremos conocer su opinión sobre el servicio que recibió el {{fecha_atencion}}.\n\n📋 Su feedback es muy valioso para nosotros.\n\n👆 Por favor, haga clic en el siguiente enlace para responder una breve encuesta de satisfacción:\n\n🔗 {{survey_link}}\n\n⏱️ Solo toma 2 minutos\n🎯 Sus respuestas nos ayudan a mejorar\n\n¡Muchas gracias por su tiempo!\n\n---\n*{{concesionario}}*\n📍 {{direccion}}\n📞 {{telefono}}\n`;\n\n// Procesar lote de clientes\nconst processedMessages = currentBatch.clients_to_survey.map(client => {\n  // Generar enlace único (siguiendo patrón de URLs existentes)\n  const surveyParams = {\n    t: campaignData.tenant_id,\n    c: client.telefono,\n    s: 'whatsapp',\n    ts: Date.now() // timestamp para tracking\n  };\n  \n  const surveyLink = `${$vars.N8N_WEBHOOK_URL}/webhook/survey/submit?${new URLSearchParams(surveyParams).toString()}`;\n  \n  // Personalizar mensaje (siguiendo patrón de templates)\n  const personalizedMessage = messageTemplate\n    .replace(/{{nombre}}/g, client.nombre)\n    .replace(/{{concesionario}}/g, tenantConfig.nombre_concesionario || 'Nuestro Concesionario')\n    .replace(/{{fecha_atencion}}/g, client.fecha_atencion)\n    .replace(/{{survey_link}}/g, surveyLink)\n    .replace(/{{direccion}}/g, tenantConfig.direccion || '')\n    .replace(/{{telefono}}/g, tenantConfig.telefono_principal || '')\n    .trim();\n  \n  return {\n    to: client.telefono,\n    message: personalizedMessage,\n    client_data: client,\n    survey_link: surveyLink,\n    tenant_id: campaignData.tenant_id\n  };\n});\n\nreturn {\n  messages: processedMessages,\n  batch_info: {\n    batch_size: processedMessages.length,\n    business_phone_id: tenantConfig.whatsapp_business_phone_id,\n    batch_number: currentBatch.batchNumber || 1\n  },\n  tenant_config: tenantConfig\n};"
      },
      "id": "prepare-messages",
      "name": "Prepare Messages",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "fieldToSplitOut": "messages",
        "options": {}
      },
      "id": "split-messages",
      "name": "Split Messages",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [900, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v17.0/{{ $('Prepare Messages').first().json.batch_info.business_phone_id }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headers": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $vars.WHATSAPP_ACCESS_TOKEN }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "body": {
          "parameters": [
            {
              "name": "messaging_product",
              "value": "whatsapp"
            },
            {
              "name": "to",
              "value": "={{ $json.to }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "={ \"body\": \"{{ $json.message.replace(/\"/g, '\\\\\"') }}\" }"
            }
          ]
        }
      },
      "id": "send-whatsapp",
      "name": "Send WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $vars.SUPABASE_URL }}/rest/v1/encuestas",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headers": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $vars.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "body": {
          "parameters": [
            {
              "name": "concesionario_id",
              "value": "={{ $json.tenant_id }}"
            },
            {
              "name": "cliente_nombre",
              "value": "={{ $json.client_data.nombre }}"
            },
            {
              "name": "cliente_telefono",
              "value": "={{ $json.client_data.telefono }}"
            },
            {
              "name": "cliente_email",
              "value": "={{ $json.client_data.email }}"
            },
            {
              "name": "cliente_rut",
              "value": "={{ $json.client_data.rut }}"
            },  
            {
              "name": "sucursal",
              "value": "={{ $json.client_data.sucursal }}"
            },
            {
              "name": "fecha_atencion",
              "value": "={{ $json.client_data.fecha_atencion }}"
            },
            {
              "name": "tipo_servicio",
              "value": "={{ $json.client_data.tipo_servicio }}"
            },
            {
              "name": "asesor_servicio",
              "value": "={{ $json.client_data.asesor_servicio }}"
            },
            {
              "name": "vehiculo_patente",
              "value": "={{ $json.client_data.vehiculo_patente }}"
            },
            {
              "name": "origen",
              "value": "WhatsApp"
            },
            {
              "name": "estado",
              "value": "enviado"
            },
            {
              "name": "survey_link",
              "value": "={{ $json.survey_link }}"
            },
            {
              "name": "fecha_envio",
              "value": "={{ new Date().toISOString() }}"
            },
            {
              "name": "whatsapp_message_id",
              "value": "={{ $('Send WhatsApp').first().json.messages?.[0]?.id }}"
            }
          ]
        }
      },
      "id": "register-survey",
      "name": "Register Survey",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "seconds"
      },
      "id": "rate-limit-delay",
      "name": "Rate Limit Delay",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [1560, 300]
    },
    {
      "parameters": {
        "jsCode": "// Generar estadísticas de envío para el lote actual\nconst sentResults = $input.all();\nconst batchInfo = $('Prepare Messages').first().json.batch_info;\n\n// Calcular métricas (siguiendo patrón de workflows existentes)\nconst successfulSends = sentResults.filter(result => \n  result.json?.whatsapp_message_id || result.json?.messages?.[0]?.id\n).length;\nconst failedSends = sentResults.length - successfulSends;\n\nconst batchReport = {\n  batch_number: batchInfo.batch_number,\n  batch_size: batchInfo.batch_size,\n  successful_sends: successfulSends,\n  failed_sends: failedSends,\n  success_rate: Math.round((successfulSends / sentResults.length) * 100),\n  timestamp: new Date().toISOString()\n};\n\nreturn batchReport;"
      },
      "id": "batch-statistics",
      "name": "Batch Statistics",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1780, 300]
    },
    {
      "parameters": {
        "jsCode": "// Programar monitoreo automático (siguiendo patrón de scheduling)\nconst campaignData = $('WhatsApp Sender Trigger').first().json;\nconst allBatchStats = $input.all();\n\n// Crear task de seguimiento en 6 horas\nconst followupTask = {\n  webhook_url: `${$vars.N8N_WEBHOOK_URL}/webhook/survey/response-monitor`,\n  tenant_id: campaignData.tenant_id,\n  campaign_id: `campaign_${Date.now()}`,\n  clients_sent: campaignData.clients_to_survey.length,\n  schedule_time: new Date(Date.now() + 6 * 60 * 60 * 1000).toISOString(), // 6 horas\n  batch_reports: allBatchStats,\n  upload_metadata: campaignData.upload_metadata,\n  next_workflow: 'survey-response-monitor'\n};\n\nreturn followupTask;"  
      },
      "id": "schedule-monitoring",
      "name": "Schedule Monitoring",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2000, 300]
    },
    {
      "parameters": {
        "operation": "create",
        "resource": "execution",
        "workflowId": "survey-response-monitor",
        "data": "={{ JSON.stringify($json) }}",
        "options": {
          "startAt": "={{ $json.schedule_time }}"
        }
      },
      "id": "trigger-monitoring",
      "name": "Trigger Monitoring",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [2220, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"success\",\n  \"message\": \"Campaña WhatsApp enviada correctamente. Monitoreo programado en 6 horas.\",\n  \"campaign_data\": {\n    \"total_sent\": {{ $('WhatsApp Sender Trigger').first().json.clients_to_survey.length }},\n    \"batch_reports\": {{ JSON.stringify($('Batch Statistics').all()) }},\n    \"monitoring_scheduled\": \"{{ $json.schedule_time }}\"\n  },\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "success-response",
      "name": "Success Response", 
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2440, 300]
    }
  ],
  "connections": {
    "WhatsApp Sender Trigger": {
      "main": [
        [
          {
            "node": "Batch Clients",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Batch Clients": {
      "main": [
        [
          {
            "node": "Prepare Messages",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "Prepare Messages": {
      "main": [
        [
          {
            "node": "Split Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Messages": {
      "main": [
        [
          {
            "node": "Send WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send WhatsApp": {
      "main": [
        [
          {
            "node": "Register Survey",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Register Survey": {
      "main": [
        [
          {
            "node": "Rate Limit Delay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rate Limit Delay": {
      "main": [
        [
          {
            "node": "Batch Statistics", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Batch Statistics": {
      "main": [
        [
          {
            "node": "Schedule Monitoring",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Monitoring": {
      "main": [
        [
          {
            "node": "Trigger Monitoring",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger Monitoring": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "srp",
      "name": "srp"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "survey",
      "name": "survey"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "whatsapp",
      "name": "whatsapp"
    }
  ],
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "survey-whatsapp-sender",
  "versionId": "1.0.0"
}