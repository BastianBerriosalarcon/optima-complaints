{  "name": "ReRank Cohere - Refinamiento de Documentos RAG",  "nodes": [    {      "parameters": {        "workflowId": "={{ $json.workflowId || 'upstream' }}"      },      "id": "workflow-trigger",      "name": "Trigger ReRank",      "type": "n8n-nodes-base.executeWorkflowTrigger",      "typeVersion": 2.1,      "position": [250, 300]    },    {      "parameters": {        "jsCode": "// Validar y normalizar entrada\nconst input = $input.first()?.json || {};\nconst query = input.query || '';\nconst documents = Array.isArray(input.documents) ? input.documents : [];\nconst tenant_id = input.tenant_id || input.concesionario_id || null;\nif (!query || documents.length === 0) {\n  throw new Error('Entrada invÃ¡lida: se requiere query y documents[]');\n}\nreturn [{ json: { tenant_id, query, documents }}];"      },      "id": "validate-rerank-input",      "name": "Validar Entrada",      "type": "n8n-nodes-base.code",      "typeVersion": 2.1,      "position": [470, 300]    },    {      "parameters": {        "jsCode": "// Preparar request para Cohere Rerank\nconst cfg = $json.cohere_config || {};\nconst model = cfg.cohere_model || cfg.model || 'rerank-multilingual-v3.0';\nconst top_k = Number(cfg.rerank_top_k || 5);\nconst request = {\n  model,\n  top_n: top_k,\n  query: $json.query,\n  documents: $json.documents.map(d => (typeof d === 'string' ? d : (d.text || JSON.stringify(d))))\n};\nreturn [{ json: { ...$json, cohere_request: request, cohere_config: cfg } }];"      },      "id": "prepare-cohere-request",      "name": "Preparar Request Cohere",      "type": "n8n-nodes-base.code",      "typeVersion": 2.1,      "position": [690, 300]    },    {      "parameters": {        "authentication": "genericCredentialType",        "genericAuthType": "httpHeaderAuth",        "requestMethod": "POST",        "url": "https://api.cohere.ai/v1/rerank",        "sendHeaders": true,        "headerParameters": {          "parameters": [            { "name": "Authorization", "value": "={{ 'Bearer ' + ($json.cohere_config?.api_key || $json.cohere_config?.cohere_api_key || $vars.COHERE_API_KEY || '') }}" },            { "name": "Content-Type", "value": "application/json" },            { "name": "Accept", "value": "application/json" }          ]        },        "sendBody": true,        "bodyContentType": "json",        "jsonBody": "={{ JSON.stringify($json.cohere_request) }}",        "options": {          "timeout": 30000,          "retry": { "enabled": true, "maxRetries": 2 },          "response": { "response": { "fullResponse": false, "responseFormat": "json" } }        }      },      "id": "call-cohere-rerank",      "name": "Llamar Cohere Rerank",      "type": "n8n-nodes-base.httpRequestV3",      "typeVersion": 4.2,      "position": [910, 300]    },    {      "parameters": {        "jsCode": "// Procesar resultados de Cohere\nconst res = $input.first().json;\nconst results = Array.isArray(res.results) ? res.results : [];\nconst threshold = Number($json.cohere_config?.rerank_threshold || 0.3);\nconst mapped = results.map(r => ({ text: r.document, index: r.index, score: r.relevance_score }));\nconst filtered = mapped.filter(r => r.score >= threshold);\nconst enriched = {\n  tenant_id: $json.tenant_id,\n  query: $json.query,\n  reranked: mapped,\n  filtered,\n  rerank_stats: {\n    original_count: $json.documents?.length || 0,\n    reranked_count: mapped.length,\n    filtered_count: filtered.length,\n    threshold_used: threshold,\n    average_relevance_score: mapped.reduce((a,b)=>a+b.score,0) / Math.max(mapped.length,1),\n    top_score: mapped[0]?.score || 0\n  }\n};\nreturn [{ json: enriched }];"      },      "id": "process-rerank-results",      "name": "Procesar Resultados",      "type": "n8n-nodes-base.code",      "typeVersion": 2.1,      "position": [1130, 300]    }  ],  "connections": {    "Trigger ReRank": { "main": [[{ "node": "Validar Entrada", "type": "main", "index": 0 }]] },    "Validar Entrada": { "main": [[{ "node": "Preparar Request Cohere", "type": "main", "index": 0 }]] },    "Preparar Request Cohere": { "main": [[{ "node": "Llamar Cohere Rerank", "type": "main", "index": 0 }]] },    "Llamar Cohere Rerank": { "main": [[{ "node": "Procesar Resultados", "type": "main", "index": 0 }]] }  },  "settings": { "saveExecutionProgress": true, "saveManualExecutions": true },  "staticData": {},  "tags": ["rag", "cohere", "rerank", "documentos"],  "versionId": "1.0.1"}