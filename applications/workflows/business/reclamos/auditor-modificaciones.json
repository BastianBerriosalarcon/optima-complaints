{
  "name": "Auditor de Modificaciones de Reclamos",
  "description": "Registra cambios en reclamos y responde con resumen. Versión mínima válida.",
  "tags": ["auditoria", "reclamos", "srp"],
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/audit-complaint-changes",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "audit-webhook-trigger",
      "name": "Webhook Auditoría",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "jsCode": "// Normaliza payload y calcula resumen de cambios\nconst inJson = $input.first().json || {};\nconst changes = Array.isArray(inJson.field_changes) ? inJson.field_changes : [];\nreturn [{ json: {\n  complaint_id: inJson.complaint_id || inJson.reclamo_id || null,\n  tenant_id: inJson.tenant_id || inJson.concesionario_id || null,\n  user_id: inJson.user_id || null,\n  user_name: inJson.user_name || 'Desconocido',\n  user_role: inJson.user_role || 'desconocido',\n  user_email: inJson.user_email || null,\n  field_changes: changes,\n  total_changes: changes.length,\n  state_before: inJson.state_before || {},\n  state_after: inJson.state_after || {},\n  change_reason: inJson.change_reason || 'No especificado',\n  change_notes: inJson.change_notes || '',\n  criticality_level: inJson.criticality_level || 'normal',\n  requires_notification: !!inJson.requires_notification,\n  source_system: inJson.source_system || 'n8n',\n  ip_address: inJson.ip_address || null,\n  user_agent: inJson.user_agent || null,\n  audit_id: inJson.audit_id || (Date.now().toString(36)),\n  change_timestamp: inJson.change_timestamp || new Date().toISOString()\n} }];"
      },
      "id": "process-audit-event",
      "name": "Procesar Evento Auditoría",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [470, 300]
    },
    {
      "parameters": { "conditions": { "number": [ { "value1": "={{ $json.total_changes }}", "operation": "larger", "value2": 0 } ] } },
      "id": "check-has-changes",
      "name": "¿Hay Cambios?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [690, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $vars.SUPABASE_URL }}/rest/v1/auditoria_reclamos",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headers": { "parameters": [
          { "name": "apikey", "value": "={{ $vars.SUPABASE_ANON_KEY }}" },
          { "name": "Authorization", "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}" },
          { "name": "Content-Type", "value": "application/json" },
          { "name": "Prefer", "value": "return=representation" }
        ]},
        "body": { "parameters": [
          { "name": "reclamo_id", "value": "={{ $json.complaint_id }}" },
          { "name": "tenant_id", "value": "={{ $json.tenant_id }}" },
          { "name": "usuario_id", "value": "={{ $json.user_id }}" },
          { "name": "usuario_nombre", "value": "={{ $json.user_name }}" },
          { "name": "usuario_rol", "value": "={{ $json.user_role }}" },
          { "name": "usuario_email", "value": "={{ $json.user_email }}" },
          { "name": "campos_modificados", "value": "={{ JSON.stringify($json.field_changes) }}" },
          { "name": "estado_anterior", "value": "={{ JSON.stringify($json.state_before) }}" },
          { "name": "estado_posterior", "value": "={{ JSON.stringify($json.state_after) }}" },
          { "name": "razon_cambio", "value": "={{ $json.change_reason }}" },
          { "name": "notas_cambio", "value": "={{ $json.change_notes }}" },
          { "name": "nivel_criticidad", "value": "={{ $json.criticality_level }}" },
          { "name": "requiere_notificacion", "value": "={{ $json.requires_notification }}" },
          { "name": "sistema_origen", "value": "={{ $json.source_system }}" },
          { "name": "direccion_ip", "value": "={{ $json.ip_address }}" },
          { "name": "user_agent", "value": "={{ $json.user_agent }}" },
          { "name": "audit_id", "value": "={{ $json.audit_id }}" },
          { "name": "timestamp_cambio", "value": "={{ $json.change_timestamp }}" }
        ]}
      },
      "id": "store-audit-record",
      "name": "Guardar Auditoría (Supabase)",
      "type": "n8n-nodes-base.httpRequestV3",
      "typeVersion": 4.1,
      "position": [910, 200]
    },
    {
      "parameters": {
        "jsCode": "// Resumen final\nconst stored = $input.first().json || {};\nreturn [{ json: {\n  audit_id: $json.audit_id,\n  complaint_id: $json.complaint_id,\n  tenant_id: $json.tenant_id,\n  change_summary: { total_fields_changed: $json.total_changes, criticality_level: $json.criticality_level },\n  compliance_metrics: { audit_stored: true, traceability_complete: true, data_integrity_maintained: true, notification_sent: false },\n  technical_context: { audit_record_id: (Array.isArray(stored) ? stored[0]?.id : stored.id) || null },\n  processing_completed_at: new Date().toISOString()\n} }];"
      },
      "id": "generate-audit-summary",
      "name": "Generar Resumen",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [1130, 200]
    },
    {
      "parameters": {
        "respondWithOptions": "responseData",
        "responseData": "={\n  \"success\": true,\n  \"message\": \"Sin cambios para auditar\",\n  \"complaint_id\": \"{{ $json.complaint_id }}\",\n  \"tenant_id\": \"{{ $json.tenant_id }}\",\n  \"changes_detected\": 0,\n  \"audit_skipped\": true,\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "respond-no-changes",
      "name": "Responder Sin Cambios",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2.1,
      "position": [910, 450]
    },
    {
      "parameters": {
        "respondWithOptions": "responseData",
        "responseData": "={\n  \"success\": true,\n  \"message\": \"Auditoría almacenada\",\n  \"audit_id\": \"{{ $json.audit_id }}\",\n  \"complaint_id\": \"{{ $json.complaint_id }}\",\n  \"tenant_id\": \"{{ $json.tenant_id }}\",\n  \"changes_audited\": {{ $json.change_summary.total_fields_changed }},\n  \"criticality_level\": \"{{ $json.change_summary.criticality_level }}\",\n  \"notification_sent\": {{ $json.compliance_metrics.notification_sent }},\n  \"audit_record_id\": {{ $json.technical_context.audit_record_id }},\n  \"processing_completed_at\": \"{{ $json.processing_completed_at }}\"\n}"
      },
      "id": "respond-audit-complete",
      "name": "Responder Auditoría Completa",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2.1,
      "position": [1350, 200]
    }
  ],
  "connections": {
    "Webhook Auditoría": { "main": [[{ "node": "Procesar Evento Auditoría", "type": "main", "index": 0 }]] },
    "Procesar Evento Auditoría": { "main": [[{ "node": "¿Hay Cambios?", "type": "main", "index": 0 }]] },
    "¿Hay Cambios?": { "main": [
      [{ "node": "Guardar Auditoría (Supabase)", "type": "main", "index": 0 }],
      [{ "node": "Responder Sin Cambios", "type": "main", "index": 0 }]
    ] },
    "Guardar Auditoría (Supabase)": { "main": [[{ "node": "Generar Resumen", "type": "main", "index": 0 }]] },
    "Generar Resumen": { "main": [[{ "node": "Responder Auditoría Completa", "type": "main", "index": 0 }]] }
  },
  "settings": { "executionOrder": "v1" },
  "staticData": null
}