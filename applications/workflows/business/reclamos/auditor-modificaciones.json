{
  "name": "Auditor de Modificaciones de Reclamos",
  "description": "Workflow que registra y audita todas las modificaciones realizadas en reclamos, manteniendo un historial completo de cambios con trazabilidad de usuarios y timestamps.",
  "tags": [
    "auditoria",
    "modificaciones", 
    "reclamos",
    "trazabilidad",
    "historial",
    "critico"
  ],
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/webhook/audit-complaint-changes",
        "options": {
          "responseData": "firstEntryJson"
        }
      },
      "id": "audit-webhook-trigger",
      "name": "Webhook Auditoría",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [250, 300]
    },
    {
      "parameters": {
      },
      "id": "process-audit-event",
      "name": "Procesar Evento Auditoría",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [470, 300]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_changes }}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "id": "check-has-changes",
      "name": "¿Hay Cambios para Auditar?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [690, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Obtener información adicional del reclamo para contexto\nSELECT \n  r.id,\n  r.concesionario_id,\n  r.id_externo,\n  r.estado,\n  r.detalle,\n  r.black_alert,\n  \n  -- Información del cliente\n  c.nombre as cliente_nombre,\n  c.rut as cliente_rut,\n  c.telefono as cliente_telefono,\n  c.email as cliente_email,\n  \n  -- Información del vehículo\n  v.marca,\n  v.modelo,\n  v.patente,\n  r.vin,\n  \n  -- Información de asignación\n  s.nombre as sucursal_nombre,\n  t.nombre as taller_nombre,\n  \n  -- Información del concesionario\n  con.nombre as concesionario_nombre,\n  \n  -- Timestamps importantes\n  r.fecha_creacion,\n  r.fecha_actualizacion\n  \nFROM reclamos r\nINNER JOIN clientes c ON r.cliente_id = c.id\nLEFT JOIN vehiculos v ON r.vehiculo_id = v.id\nLEFT JOIN sucursales s ON r.sucursal_id = s.id\nLEFT JOIN talleres t ON r.taller_id = t.id\nINNER JOIN concesionarios con ON r.concesionario_id = con.id\nWHERE \n  r.id = $1 \n  AND r.concesionario_id = $2\nLIMIT 1;",
        "additionalFields": {
          "queryParameters": "=[$json.complaint_id, $json.tenant_id]"
        }
      },
      "id": "get-complaint-context",
      "name": "Obtener Contexto Reclamo",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [910, 200]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Registrar evento de auditoría en historial de modificaciones\nINSERT INTO auditoria_reclamos (\n  reclamo_id,\n  tenant_id,\n  usuario_id,\n  usuario_nombre,\n  usuario_rol,\n  usuario_email,\n  \n  -- Cambios específicos\n  campos_modificados,\n  estado_anterior,\n  estado_posterior,\n  \n  -- Metadatos del cambio\n  razon_cambio,\n  notas_cambio,\n  nivel_criticidad,\n  requiere_notificacion,\n  \n  -- Contexto técnico\n  sistema_origen,\n  direccion_ip,\n  user_agent,\n  \n  -- Identificación del evento\n  audit_id,\n  timestamp_cambio,\n  created_at\n) VALUES (\n  $1,  -- reclamo_id\n  $2,  -- tenant_id\n  $3,  -- usuario_id\n  $4,  -- usuario_nombre\n  $5,  -- usuario_rol\n  $6,  -- usuario_email\n  $7::jsonb,  -- campos_modificados\n  $8::jsonb,  -- estado_anterior\n  $9::jsonb,  -- estado_posterior\n  $10, -- razon_cambio\n  $11, -- notas_cambio\n  $12, -- nivel_criticidad\n  $13, -- requiere_notificacion\n  $14, -- sistema_origen\n  $15, -- direccion_ip\n  $16, -- user_agent\n  $17, -- audit_id\n  $18::timestamp, -- timestamp_cambio\n  CURRENT_TIMESTAMP  -- created_at\n) RETURNING *;",
        "additionalFields": {
          "queryParameters": "=[\n  $('Procesar Evento Auditoría').first().json.complaint_id,\n  $('Procesar Evento Auditoría').first().json.tenant_id,\n  $('Procesar Evento Auditoría').first().json.user_id,\n  $('Procesar Evento Auditoría').first().json.user_name,\n  $('Procesar Evento Auditoría').first().json.user_role,\n  $('Procesar Evento Auditoría').first().json.user_email,\n  JSON.stringify($('Procesar Evento Auditoría').first().json.field_changes),\n  JSON.stringify($('Procesar Evento Auditoría').first().json.state_before),\n  JSON.stringify($('Procesar Evento Auditoría').first().json.state_after),\n  $('Procesar Evento Auditoría').first().json.change_reason,\n  $('Procesar Evento Auditoría').first().json.change_notes,\n  $('Procesar Evento Auditoría').first().json.criticality_level,\n  $('Procesar Evento Auditoría').first().json.requires_notification,\n  $('Procesar Evento Auditoría').first().json.source_system,\n  $('Procesar Evento Auditoría').first().json.ip_address,\n  $('Procesar Evento Auditoría').first().json.user_agent,\n  $('Procesar Evento Auditoría').first().json.audit_id,\n  $('Procesar Evento Auditoría').first().json.change_timestamp\n]"
        }
      },
      "id": "store-audit-record",
      "name": "Almacenar Registro Auditoría",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [1130, 200]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $('Procesar Evento Auditoría').first().json.requires_notification }}",
              "operation": "equal",
              "value2": true
            }
          ]
        }
      },
      "id": "check-requires-notification",
      "name": "¿Requiere Notificación?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [1350, 200]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Obtener destinatarios para notificaciones de auditoría crítica\nSELECT \n  u.id,\n  u.nombre,\n  u.email,\n  u.rol\nFROM usuarios u\nWHERE \n  u.concesionario_id = $1\n  AND u.activo = true\n  AND u.rol IN ('jefe_servicio', 'encargado_calidad', 'gerencia')\nORDER BY \n  CASE u.rol\n    WHEN 'gerencia' THEN 1\n    WHEN 'jefe_servicio' THEN 2\n    WHEN 'encargado_calidad' THEN 3\n    ELSE 4\n  END;",
        "additionalFields": {
          "queryParameters": "=[$('Procesar Evento Auditoría').first().json.tenant_id]"
        }
      },
      "id": "get-notification-recipients",
      "name": "Obtener Destinatarios Notificación",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [1570, 120]
    },
    {
      "parameters": {
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "emailSmtp",
        "fromEmail": "auditoria@optimacx.com",
        "toEmail": "={{ $('Obtener Destinatarios Notificación').all().map(item => item.json.email).join(',') }}",
        "subject": "🔍 {{ $('Procesar Evento Auditoría').first().json.criticality_level === 'critical' ? 'AUDITORÍA CRÍTICA' : 'AUDITORÍA IMPORTANTE' }} - Reclamo #{{ $('Obtener Contexto Reclamo').first().json.id_externo }}",
        "html": "=<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        .container { font-family: Arial, sans-serif; max-width: 700px; margin: 0 auto; }\n        .header { \n            background: {{ $('Procesar Evento Auditoría').first().json.criticality_level === 'critical' ? '#8B0000' : '#dc3545' }}; \n            color: white; \n            padding: 20px; \n            text-align: center; \n            border-radius: 8px 8px 0 0;\n        }\n        .audit-info { background: #f8f9fa; padding: 15px; border-radius: 5px; margin: 15px 0; }\n        .change-item { \n            background: #fff3cd; \n            padding: 10px; \n            margin: 8px 0; \n            border-left: 4px solid #ffc107; \n            border-radius: 3px;\n        }\n        .critical-change { \n            background: #f8d7da; \n            border-left-color: #dc3545;\n        }\n        .complaint-context { background: #e9ecef; padding: 15px; border-radius: 5px; margin: 15px 0; }\n        .user-info { background: #d1ecf1; padding: 10px; border-radius: 5px; margin: 10px 0; }\n        .cta { background: #17a2b8; color: white; padding: 15px; text-align: center; margin: 20px 0; border-radius: 5px; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h2>🔍 {{ $('Procesar Evento Auditoría').first().json.criticality_level === 'critical' ? 'AUDITORÍA CRÍTICA' : 'CAMBIO IMPORTANTE DETECTADO' }}</h2>\n            <p>Reclamo #{{ $('Obtener Contexto Reclamo').first().json.id_externo }}</p>\n            <p>{{ $('Obtener Contexto Reclamo').first().json.concesionario_nombre }}</p>\n        </div>\n        \n        <div style=\"padding: 20px;\">\n            <div class=\"complaint-context\">\n                <h3>📋 Información del Reclamo</h3>\n                <ul>\n                    <li><strong>Cliente:</strong> {{ $('Obtener Contexto Reclamo').first().json.cliente_nombre }} ({{ $('Obtener Contexto Reclamo').first().json.cliente_rut }})</li>\n                    <li><strong>Vehículo:</strong> {{ $('Obtener Contexto Reclamo').first().json.marca }} {{ $('Obtener Contexto Reclamo').first().json.modelo }} - {{ $('Obtener Contexto Reclamo').first().json.patente }}</li>\n                    <li><strong>VIN:</strong> {{ $('Obtener Contexto Reclamo').first().json.vin }}</li>\n                    <li><strong>Sucursal:</strong> {{ $('Obtener Contexto Reclamo').first().json.sucursal_nombre }}</li>\n                    <li><strong>Estado Actual:</strong> {{ $('Obtener Contexto Reclamo').first().json.estado.toUpperCase() }}</li>\n                    {{ $('Obtener Contexto Reclamo').first().json.black_alert ? '<li><strong>🚨 BLACK ALERT ACTIVO</strong></li>' : '' }}\n                </ul>\n            </div>\n            \n            <div class=\"user-info\">\n                <h3>👤 Usuario que Realizó el Cambio</h3>\n                <ul>\n                    <li><strong>Nombre:</strong> {{ $('Procesar Evento Auditoría').first().json.user_name }}</li>\n                    <li><strong>Rol:</strong> {{ $('Procesar Evento Auditoría').first().json.user_role }}</li>\n                    <li><strong>Email:</strong> {{ $('Procesar Evento Auditoría').first().json.user_email }}</li>\n                    <li><strong>Fecha/Hora:</strong> {{ new Date($('Procesar Evento Auditoría').first().json.change_timestamp).toLocaleString('es-CL') }}</li>\n                    {{ $('Procesar Evento Auditoría').first().json.ip_address ? `<li><strong>IP:</strong> ${$('Procesar Evento Auditoría').first().json.ip_address}</li>` : '' }}\n                </ul>\n            </div>\n            \n            <div class=\"audit-info\">\n                <h3>🔄 Cambios Realizados ({{ $('Procesar Evento Auditoría').first().json.total_changes }})</h3>\n                {{ $('Procesar Evento Auditoría').first().json.field_changes.map(change => `\n                <div class=\"change-item ${change.change_type === 'priority_change' || change.field === 'black_alert' ? 'critical-change' : ''}\">\n                    <strong>${change.field.replace('_', ' ').toUpperCase()}:</strong><br>\n                    <span style=\"color: #dc3545;\">Antes:</span> ${change.old_value || 'No definido'}<br>\n                    <span style=\"color: #28a745;\">Después:</span> ${change.new_value || 'No definido'}<br>\n                    <small><em>Tipo: ${change.change_type}</em></small>\n                </div>\n                `).join('') }}\n            </div>\n            \n            {{ $('Procesar Evento Auditoría').first().json.change_reason !== 'No especificado' ? `\n            <div style=\"background: #fff3cd; padding: 15px; border-radius: 5px; margin: 15px 0;\">\n                <h4>📝 Razón del Cambio:</h4>\n                <p>${$('Procesar Evento Auditoría').first().json.change_reason}</p>\n                ${$('Procesar Evento Auditoría').first().json.change_notes ? `<p><strong>Notas:</strong> ${$('Procesar Evento Auditoría').first().json.change_notes}</p>` : ''}\n            </div>\n            ` : '' }}\n            \n            <div class=\"cta\">\n                <strong>📊 REGISTRO DE AUDITORÍA COMPLETO</strong><br>\n                Todos los cambios han sido registrados en el sistema de auditoría.<br>\n                ID de Auditoría: {{ $('Procesar Evento Auditoría').first().json.audit_id }}\n            </div>\n            \n            <div style=\"background: #e9ecef; padding: 15px; border-radius: 5px; margin: 20px 0;\">\n                <h4>🎯 Acciones Recomendadas:</h4>\n                <ol>\n                    {{ $('Procesar Evento Auditoría').first().json.criticality_level === 'critical' ? '<li><strong>Revisar inmediatamente</strong> - Cambio crítico detectado</li>' : '' }}\n                    <li><strong>Verificar autorización</strong> - Confirmar que el cambio fue autorizado</li>\n                    <li><strong>Validar información</strong> - Revisar que los datos sean correctos</li>\n                    <li><strong>Seguimiento</strong> - Monitorear evolución del reclamo</li>\n                    {{ $('Procesar Evento Auditoría').first().json.field_changes.some(c => c.field === 'estado' && c.new_value === 'cerrado') ? '<li><strong>Verificar resolución</strong> - Confirmar que el cierre fue apropiado</li>' : '' }}\n                </ol>\n            </div>\n            \n            <p>💻 <strong>Ver historial completo:</strong> <a href=\"https:
      },
      "id": "send-audit-notification",
      "name": "Enviar Notificación Auditoría",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [1790, 120]
    },
    {
      "parameters": {
      },
      "id": "generate-audit-summary",
      "name": "Generar Resumen Auditoría",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [2010, 200]
    },
    {
      "parameters": {
        "respondWithOptions": "responseData",
        "responseData": "={\n  \"success\": true,\n  \"message\": \"Auditoría de modificaciones completada exitosamente\",\n  \"audit_id\": \"{{ $json.audit_id }}\",\n  \"complaint_id\": \"{{ $json.complaint_id }}\",\n  \"tenant_id\": \"{{ $json.tenant_id }}\",\n  \"changes_audited\": {{ $json.change_summary.total_fields_changed }},\n  \"criticality_level\": \"{{ $json.change_summary.criticality_level }}\",\n  \"notification_sent\": {{ $json.compliance_metrics.notification_sent }},\n  \"audit_record_id\": {{ $json.technical_context.audit_record_id }},\n  \"compliance_status\": {\n    \"audit_stored\": {{ $json.compliance_metrics.audit_stored }},\n    \"traceability_complete\": {{ $json.compliance_metrics.traceability_complete }},\n    \"data_integrity_maintained\": {{ $json.compliance_metrics.data_integrity_maintained }}\n  },\n  \"processing_completed_at\": \"{{ $json.processing_completed_at }}\"\n}"
      },
      "id": "respond-audit-complete",
      "name": "Respuesta Auditoría Completa",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2.1,
      "position": [2230, 200]
    },
    {
      "parameters": {
        "respondWithOptions": "responseData",
        "responseData": "={\n  \"success\": true,\n  \"message\": \"No hay cambios para auditar\",\n  \"complaint_id\": \"{{ $json.complaint_id }}\",\n  \"tenant_id\": \"{{ $json.tenant_id }}\",\n  \"changes_detected\": 0,\n  \"audit_skipped\": true,\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "respond-no-changes",
      "name": "Respuesta Sin Cambios",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2.1,
      "position": [910, 450]
    }
  ],
  "connections": {
    "Webhook Auditoría": {
      "main": [["Procesar Evento Auditoría", "type": "main", "index": 0]]
    },
    "Procesar Evento Auditoría": {
      "main": [["¿Hay Cambios para Auditar?", "type": "main", "index": 0]]
    },
    "¿Hay Cambios para Auditar?": {
      "main": [
        [{"node": "Obtener Contexto Reclamo", "type": "main", "index": 0}],
        [{"node": "Respuesta Sin Cambios", "type": "main", "index": 0}]
      ]
    },
    "Obtener Contexto Reclamo": {
      "main": [["Almacenar Registro Auditoría", "type": "main", "index": 0]]
    },
    "Almacenar Registro Auditoría": {
      "main": [["¿Requiere Notificación?", "type": "main", "index": 0]]
    },
    "¿Requiere Notificación?": {
      "main": [
        [{"node": "Obtener Destinatarios Notificación", "type": "main", "index": 0}],
        [{"node": "Generar Resumen Auditoría", "type": "main", "index": 0}]
      ]
    },
    "Obtener Destinatarios Notificación": {
      "main": [["Enviar Notificación Auditoría", "type": "main", "index": 0]]
    },
    "Enviar Notificación Auditoría": {
      "main": [["Generar Resumen Auditoría", "type": "main", "index": 0]]
    },
    "Generar Resumen Auditoría": {
      "main": [["Respuesta Auditoría Completa", "type": "main", "index": 0]]
    }
  },
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "manejador-errores"
  },
  "staticData": {},
  "variables": {
    "AUDIT_VERSION": "1.0.0",
    "WEBHOOK_PATH": "/webhook/audit-complaint-changes",
    "AUDITABLE_FIELDS": ["estado", "detalle", "black_alert", "sucursal_id", "taller_id", "asesor_asignado_id", "cliente_id", "vehiculo_id", "vin", "tipo_reclamo"],
    "CRITICAL_CHANGES": ["black_alert", "estado"],
    "NOTIFICATION_ROLES": ["jefe_servicio", "encargado_calidad", "gerencia"],
    "RETENTION_DAYS": 2555,
    "ENABLE_IP_TRACKING": true
  }
}