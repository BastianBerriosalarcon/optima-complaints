{
  "name": "Complaint Auto Assignment",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/complaint/auto-assignment",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Auto Assignment Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [240, 300],
      "webhookId": "complaint-auto-assignment"
    },
    {
      "parameters": {
        "requestMethod": "GET",
        "url": "={{ $vars.SUPABASE_URL }}/rest/v1/usuarios",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "apikey", "value": "={{ $vars.SUPABASE_ANON_KEY }}" },
            { "name": "Authorization", "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}" }
          ]
        },
        "qs": {
          "parameters": [
            { "name": "concesionario_id", "value": "eq.{{ $json.complaint_input.tenant_id }}" },
            { "name": "or", "value": "(rol.eq.jefe_servicio,rol.eq.asesor_servicio,rol.eq.encargado_calidad)" },
            { "name": "activo", "value": "eq.true" },
            { "name": "select", "value": "id,nombre,email,rol,sucursal_id" }
          ]
        }
      },
      "id": "get-service-staff",
      "name": "Get Service Staff",
      "type": "n8n-nodes-base.httpRequestV3",
      "typeVersion": 4.2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "/*** COMPLAINT AUTO ASSIGNMENT - SRP ***/\nconst assignmentData = $json;\nconst staff = $('Get Service Staff').first().json || [];\n// Elegir asesor y jefe por reglas simples\nconst jefe = staff.find(u => u.rol === 'jefe_servicio');\nconst asesor = staff.find(u => u.rol === 'asesor_servicio');\nconst calidad = staff.find(u => u.rol === 'encargado_calidad');\nconst is_black_alert = (assignmentData.ai_analysis?.puntuacion_gravedad || 0) >= 0.9;\nconst complaint_data = { ...assignmentData.complaint_input, asignado_a: asesor?.id || jefe?.id || calidad?.id || null, estado: 'abierto' };\nconst notification_targets = [\n  { role: 'jefe_servicio', user: jefe },\n  { role: 'asesor_servicio', user: asesor },\n  { role: 'encargado_calidad', user: calidad }\n].filter(x => x.user);\nreturn [{ json: { complaint_data, notification_targets, ai_analysis: assignmentData.ai_analysis, tenant_config: AssignmentData.tenant_config, is_black_alert } }];"
      },
      "id": "assign-and-prepare-data",
      "name": "Assign and Prepare Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $vars.SUPABASE_URL }}/rest/v1/reclamos",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "apikey", "value": "={{ $vars.SUPABASE_ANON_KEY }}" },
            { "name": "Authorization", "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}" },
            { "name": "Content-Type", "value": "application/json" },
            { "name": "Prefer", "value": "return=representation" }
          ]
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={{ JSON.stringify($json.complaint_data) }}"
      },
      "id": "save-complaint-db",
      "name": "Save Complaint DB",
      "type": "n8n-nodes-base.httpRequestV3",
      "typeVersion": 4.2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": { "caseSensitive": true, "leftValue": "", "typeValidation": "strict" },
          "conditions": [
            { "leftValue": "={{ $json.is_black_alert }}", "rightValue": true, "operator": { "type": "boolean", "operation": "equal" } }
          ],
          "combineOperation": "all"
        }
      },
      "id": "check-black-alert",
      "name": "Check Black Alert",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "operation": "create",
        "resource": "execution",
        "workflowId": "complaint-black-alert",
        "data": "={{ JSON.stringify({ complaint_id: $('Save Complaint DB').first().json?.[0]?.id, tenant_id: $json.complaint_data?.concesionario_id, complaint_data: $json.complaint_data, ai_analysis: $json.ai_analysis, tenant_config: $json.tenant_config }) }}"
      },
      "id": "trigger-black-alert",
      "name": "Trigger Black Alert",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 2.1,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "operation": "create",
        "resource": "execution",
        "workflowId": "complaint-notifications",
        "data": "={{ JSON.stringify({ complaint_id: $('Save Complaint DB').first().json?.[0]?.id, notification_targets: $json.notification_targets, complaint_data: $json.complaint_data, ai_analysis: $json.ai_analysis, tenant_config: $json.tenant_config, is_black_alert: $json.is_black_alert }) }}"
      },
      "id": "trigger-notifications",
      "name": "Trigger Notifications",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 2.1,
      "position": [1340, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"success\",\n  \"message\": \"Reclamo asignado y guardado correctamente\",\n  \"complaint_id\": \"{{ $('Save Complaint DB').first().json?.[0]?.id }}\",\n  \"black_alert_triggered\": {{ $json.is_black_alert }},\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2.1,
      "position": [1560, 300]
    }
  ],
  "connections": {
    "Auto Assignment Trigger": { "main": [[{ "node": "Get Service Staff", "type": "main", "index": 0 }]] },
    "Get Service Staff": { "main": [[{ "node": "Assign and Prepare Data", "type": "main", "index": 0 }]] },
    "Assign and Prepare Data": { "main": [[{ "node": "Save Complaint DB", "type": "main", "index": 0 }]] },
    "Save Complaint DB": { "main": [[{ "node": "Check Black Alert", "type": "main", "index": 0 }]] },
    "Check Black Alert": { "main": [[{ "node": "Trigger Black Alert", "type": "main", "index": 0 }, { "node": "Trigger Notifications", "type": "main", "index": 0 }], [{ "node": "Trigger Notifications", "type": "main", "index": 0 }]] },
    "Trigger Black Alert": { "main": [[{ "node": "Success Response", "type": "main", "index": 0 }]] },
    "Trigger Notifications": { "main": [[{ "node": "Success Response", "type": "main", "index": 0 }]] }
  },
  "settings": { "executionOrder": "v1" },
  "tags": ["srp", "reclamos", "assignment"],
  "id": "complaint-auto-assignment",
  "versionId": "1.0.1"
}