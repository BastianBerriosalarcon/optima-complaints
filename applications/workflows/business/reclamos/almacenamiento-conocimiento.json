{
  "name": "Knowledge - Storage Finalizer",
  "description": "Workflow enfocado en almacenar chunks con embeddings en la BD y finalizar procesamiento. Principio SRP: Una sola responsabilidad - storage.",
  "tags": [
    "rag",
    "knowledge",
    "storage",
    "srp"
  ],
  "nodes": [
    {
      "parameters": {
        "workflowId": "{{ $json.workflowId }}"
      },
      "id": "workflow-trigger",
      "name": "Trigger del Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 2.1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {},
      "id": "prepare-chunks-for-storage",
      "name": "Preparar para Almacenamiento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO documento_chunks (documento_id, chunk_index, contenido, embedding, token_count, metadata) SELECT * FROM UNNEST($1::uuid[], $2::integer[], $3::text[], $4::vector[], $5::integer[], $6::jsonb[])",
        "additionalFields": {
          "queryParameters": "={{ [\n  $json.chunks_for_db.map(c => c.documento_id),\n  $json.chunks_for_db.map(c => c.chunk_index),\n  $json.chunks_for_db.map(c => c.contenido),\n  $json.chunks_for_db.map(c => c.embedding),\n  $json.chunks_for_db.map(c => c.token_count),\n  $json.chunks_for_db.map(c => JSON.stringify(c.metadata))\n] }}"
        }
      },
      "id": "insert-chunks-batch",
      "name": "Insertar Chunks (Lote)",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE documentos_conocimiento SET estado = $1, fecha_procesado = $2, chunks_generados = $3, metadatos = jsonb_set(metadatos, '{processing_stats}', $4::jsonb) WHERE id = $5",
        "additionalFields": {
          "queryParameters": "={{ ['activo', new Date().toISOString(), $('Preparar para Almacenamiento').first().json.final_stats.total_chunks, JSON.stringify($('Preparar para Almacenamiento').first().json.final_stats), $('Preparar para Almacenamiento').first().json.document_id] }}"
        }
      },
      "id": "update-document-status",
      "name": "Actualizar Estado Documento",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {},
      "id": "generate-final-report",
      "name": "Generar Reporte Final",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2.1,
      "position": [
        1120,
        300
      ]
    }
  ],
  "connections": {
    "Trigger del Workflow": {
      "main": [
        [
          {
            "node": "Preparar para Almacenamiento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar para Almacenamiento": {
      "main": [
        [
          {
            "node": "Insertar Chunks (Lote)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insertar Chunks (Lote)": {
      "main": [
        [
          {
            "node": "Actualizar Estado Documento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar Estado Documento": {
      "main": [
        [
          {
            "node": "Generar Reporte Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  }
}
