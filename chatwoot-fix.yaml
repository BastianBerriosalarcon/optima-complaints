apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: chatwoot-multitenant-dev
  namespace: 'optima-cx-467616'
  selfLink: /apis/serving.knative.dev/v1/namespaces/optima-cx-467616/services/chatwoot-multitenant-dev
  uid: 63c69f0a-9a77-4fb4-9c9e-8c9f7b5a4d3e
  resourceVersion: '123456'
  generation: 4
  creationTimestamp: '2025-08-06T19:43:57.586112Z'
  labels:
    cloud.googleapis.com/location: southamerica-west1
  annotations:
    serving.knative.dev/creator: chatwoot-service-account-dev@optima-cx-467616.iam.gserviceaccount.com
    serving.knative.dev/lastModifier: chatwoot-service-account-dev@optima-cx-467616.iam.gserviceaccount.com
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
spec:
  template:
    metadata:
      name: chatwoot-multitenant-dev-fix-001
      annotations:
        run.googleapis.com/cloudsql-instances: optima-cx-467616:southamerica-west1:chatwoot-postgres-santiago-dev
        run.googleapis.com/vpc-access-connector: optimacx-connector-dev
        run.googleapis.com/vpc-access-egress: private-ranges-only
        autoscaling.knative.dev/maxScale: '10'
        run.googleapis.com/cpu-throttling: 'false'
        run.googleapis.com/startup-cpu-boost: 'true'
        run.googleapis.com/execution-environment: gen2
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      serviceAccountName: chatwoot-service-account-dev@optima-cx-467616.iam.gserviceaccount.com
      containers:
      - image: chatwoot/chatwoot:v4.4.0
        ports:
        - name: http1
          containerPort: 3000
        env:
        - name: RAILS_ENV
          value: production
        - name: NODE_ENV  
          value: production
        - name: INSTALLATION_ENV
          value: docker
        
        # Database Configuration
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: chatwoot-database-url-dev
              key: latest
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: chatwoot-postgres-password-dev  
              key: latest
              
        # Redis Configuration - INTERNO (sin Cloud Memorystore)
        - name: REDIS_SSL_VERIFY
          value: "false"
        - name: REDIS_TIMEOUT
          value: "2"
        - name: REDIS_PASSWORD  
          value: ""
        - name: REDIS_POOL_SIZE
          value: "5"
        - name: REDIS_DB
          value: "0"  
        - name: REDIS_KEEPALIVE
          value: "true"
        - name: REDIS_SENTINELS_DISABLED
          value: "true"
        
        # Rails Cache usando memoria
        - name: RAILS_CACHE_STORE
          value: memory_store
          
        # Configuraci√≥n adicional
        - name: FORCE_SSL
          value: "false"
        - name: ENABLE_ACCOUNT_SIGNUP
          value: "false"
        - name: RAILS_LOG_TO_STDOUT
          value: enabled
        - name: SESSION_TIMEOUT
          value: "3600"
          
        # Secret Key Base
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: chatwoot-secret-key-base-dev
              key: latest
              
        # Chatwoot App Configuration  
        - name: FRONTEND_URL
          value: https://chatwoot-multitenant-dev-wfzra4ruxq-tl.a.run.app
        - name: MAILER_SENDER_EMAIL
          value: noreply@optimacx.net
        - name: SMTP_DOMAIN
          value: optimacx.net
        - name: DEFAULT_LOCALE
          value: es
        - name: TIMEZONE
          value: America/Santiago

        resources:
          limits:
            cpu: 2000m
            memory: 4096Mi
          requests:
            cpu: 1000m
            memory: 2048Mi
            
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
  traffic:
  - percent: 100
    latestRevision: true
